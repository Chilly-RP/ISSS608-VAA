[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. if they are, then they will be launched into R\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Age-sex pyramid is an analytical visualisation commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, you are required to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. Instead of plotting a single age-sex pyramid, however, you are required to display nine selected planning areas on a single view by using trellis display (also know as small-multiple plot).\nYou can fund the links to download the dataset below:\nDownload .xls\nDownload .csv"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-in-9-selected-area-using-trellis-display",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-in-9-selected-area-using-trellis-display",
    "title": "Take-home Exercise 1",
    "section": "1.0 Age-sex Pyramid in 9 Selected Area using Trellis Display",
    "text": "1.0 Age-sex Pyramid in 9 Selected Area using Trellis Display\n\n1.1 Sketch of Proposed Design\nFor 1 single sheet:\n\n\n\n1.2 Clarity\n\nContent: The proposed design used male and female population, age group and location. We need to calculate the individual population using the total population by ourselves.\nX-axis: The x-axis should has the same scale for every plots.\nY-axis: It shows the different age groups.\nLegend: In the legend I put the percentage of total population.\n\n\n\n1.3 Aesthetics\n\nChoose of color palette\nThe pink color is often associate with women, hence I use pink color for female population to give audience a better understanding.\n\n\n\n1.4 Proposed Visualization on Tableau"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-preparation",
    "title": "Take-home Exercise 1",
    "section": "2.0 Step-by-step Preparation",
    "text": "2.0 Step-by-step Preparation\n\nNo. Step Action\n\n\n\n\n\n\n\nNo.\nStep\nAction\n\n\n\n\n1\nLoad the CSV file into Tableau\n\n\n\n2\nGo to sheet 1 tab and create calculation field for Population\n\n\n\n3\nAdd the query and filter out the population for both Male and Female.\n\n\n\n\n4\nDrag Age to the rows and 2 population to the columns.\n\n\n\n5\nDrag PA to the filters, and select Ang Mo Kio.\n\n\n\n\n6\nEdit Axis of Female. Check reversed for Female and change the tick interval to fixed 1,000 under tick marks tab.\n\n\n\n\n7\nChange the bar color for female and add label for both female and male. Then sort the y-axis in descending order.\n\n\n\n8\nChange the Title to the dynamic format of location.\n\n\n\n9\nDuplicate the sheet 9 times and change the location filter\n\n\n\n10\nCreate the dashboard"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insights-from-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insights-from-visualization",
    "title": "Take-home Exercise 1",
    "section": "3.0 Insights From Visualization",
    "text": "3.0 Insights From Visualization\nFrom the 9 plots, first, we can see that Singapore has lower percentage of young people. This shows that the next two decades will usher in an aging society. Second, we can see that in the common resident area, age 60-64 is the primary group which has most population, however in downtown area, age 35-39 are the major group, which represents the people in this aging group earns more."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "This take-home exercise requires the use of appropriate analytical visualization techniques to identify significant patterns in the resale prices of public housing property in Singapore by residential towns and estates. The focus should be on 3-ROOM, 4-ROOM, and 5-ROOM housing types, and the study period should be on 2022. Students are encouraged to use interactive techniques to enhance user and data discovery experiences.\n\n\n\npacman::p_load(dplyr, tidyverse, DT, ggplot2, ggiraph, \n               ggstatsplot, patchwork, plotly, gganimate, \n               ggthemes, corrplot, heatmaply,lubridate,scales,ggrepel,ggpubr)\n\n1.2 Reading Dataset\n\nresale_data <- read_csv(\"Data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\nDT::datatable(head(resale_data,20)) \n\n\n\n\n\n\nhe month column is in the format “YYYY-MM”, we can convert it to a date format using:\n\nresale_data <- resale_data %>% \n  mutate(month = as.Date(paste0(month, \"-01\"), format = \"%Y-%m-%d\"))\n\nThis code adds “-01” to the end of each value in the month column to create a complete date string in the format “YYYY-MM-DD”, and then converts the resulting string to a date format using the as.Date function with the “%Y-%m-%d” format string.\n\nresale_345room_2022 <- resale_data %>% \n  filter(flat_type %in% c(\"3 ROOM\", \"4 ROOM\", \"5 ROOM\"), \n         year(month) == 2022) %>%\n  mutate(\"unit_price_sqm\" = resale_price/floor_area_sqm)\n\nIn this case, we use the same %in% operator as before to filter out rows where the flat_type column is either “3 ROOM”, “4 ROOM” or “5 ROOM”. Additionally, we use the as.Date function to convert the month column to a date format, and then use the year function to extract the year from the dates. We then use the logical operator == to specify that we only want rows where the year is equal to 2022.\n\nDT::datatable(head(resale_345room_2022))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#data-analysis-and-visualizations",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#data-analysis-and-visualizations",
    "title": "Take-home Exercise 3",
    "section": "2.0 Data Analysis and Visualizations",
    "text": "2.0 Data Analysis and Visualizations\n\n2.1 Average Resale Price Trend by Flat Type\n\n# Group data by flat type\nresale_345room_2022_grouped <- resale_345room_2022 %>%\n  group_by(flat_type, month) %>%\n  summarise(resale_price = mean(resale_price)/1000)\n\n# Plot monthly trend by flat type\nggplot(resale_345room_2022_grouped, aes(x = month, y = resale_price, color = flat_type)) +\n  geom_line() +\n  scale_x_date(date_labels = \"%b\", date_breaks = \"1 months\") +\n  labs(x = \"Month\", y = \"Resale Price (SGD, thousands)\", color = \"Flat Type\",title = \"Monthly Resale Price Trend by Flat Type (2022)\") +\n  theme_bw()\n\n\n\n\nAnalytic insights: This line chart displays the average resale price trends for three different types of public housing flats in Singapore (3-ROOM, 4-ROOM, and 5-ROOM) during the year 2022. The chart indicates that 3-ROOM flats generally had the lowest average resale prices, while 5-ROOM flats had the highest. All three types of flats experienced an upward trend in average resale prices throughout the year, with some fluctuations.\n\n\n2.2 Average Unit Price Per Sqm Trend by Flat Type\n\n# Group the data by flat type and month, and calculate the average unit resale price\nresale_avg <- resale_345room_2022 %>%\n  group_by(flat_type, month) %>%\n  summarise(avg_resale_price = mean(resale_price)/mean(floor_area_sqm))\n\n# Plot the line chart with dynamic tooltips using ggplot and plotly\np <- ggplot(resale_avg, aes(x = month, y = avg_resale_price, color = flat_type, group = flat_type)) +\n  geom_line() +\n  scale_x_date(date_labels = \"%b\", date_breaks = \"1 months\") +\n  scale_y_continuous(labels = function(x) paste0(x/1000, \"k\")) +\n  labs(x = \"Month\", y = \"Unit Price\", title = \"Average Unit Resale Price Trend by Flat Type (2022)\") +\n  theme_bw()\n\nggplotly(p, tooltip = c(\"month\", \"avg_resale_price\"))\n\n\n\n\n\nAnalytic insights: The line chart of the unit price per square meter of public housing in Singapore shows that there is a clear upward trend for all three flat types (3-room, 4-room, and 5-room) from January to September 2022. The average unit price for 4-room flats is the highest among the three types, followed by 3-room and 5-room flats. Additionally, there is a significant increase in unit price from August to October for all three flat types. These insights suggest that the public housing market in Singapore is experiencing a general upward trend in unit price, with larger flats commanding a lower unit price.\n\n\n2.3 Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- resale_345room_2022 %>%\n  group_by(flat_type) %>%\n  summarise(\n    n=n(),\n    mean=mean(unit_price_sqm),\n    sd=sd(unit_price_sqm)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=flat_type, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=flat_type, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          unit price by flat type\")\n\n\n\n\n\n\n2.4 The Distribution of Lease Commence Date for 3-Room (2022)\n\nresale_3room <- resale_345room_2022  %>% \n  filter(flat_type == \"3 ROOM\")\n         \ngghistostats(\n  data = resale_3room ,\n  x = lease_commence_date,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"lease commence date\",\n  title=\"The Distribution of Lease Commence Date for 3-Room (2022)\",\n)\n\n\n\n\n\nresale_4room <- resale_345room_2022  %>% \n  filter(flat_type == \"4 ROOM\")\n         \ngghistostats(\n  data = resale_4room ,\n  x = lease_commence_date,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"lease commence date\",\n  title=\"The Distribution of Lease Commence Date for 4-Room (2022)\",\n)\n\n\n\n\n\nresale_5room <- resale_345room_2022  %>% \n  filter(flat_type == \"5 ROOM\")\n         \ngghistostats(\n  data = resale_5room ,\n  x = lease_commence_date,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"lease commence date\",\n  title=\"The Distribution of Lease Commence Date for 5-Room (2022)\",\n)\n\n\n\n\nAnalytic insights: When analyzing the distribution of lease commencement dates for 3 room, 4 room, and 5 room HDB units, it was found that the majority of three-room second-hand HDB units had leases that commenced between 1970 and 1986, with the highest number of units having leases that commenced in 1984. The number of second-hand HDB units with leases commencing between 1986 and 2010 was very low. The lease commencement dates for second-hand 4 room and 5 room HDB units were relatively stable from 1970 to 2010 and began to increase in 2021, reaching a peak in 2018. However, due to the COVID-19 pandemic, this number dropped sharply, which also reflects the decline in HDB construction during the pandemic.\n\n\n2.5 One-way ANOVA test on Unit Price / sqm by Flat Type\n\np <- ggbetweenstats(\n  data = resale_345room_2022,\n  x = flat_type, \n  y = unit_price_sqm,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\np + labs(title = \"One-way ANOVA test on Unit Price / sqm by Flat Type\", \n         y = \"Unit Price / sqm\",\n         x = \"Flat Type\")\n\n\n\n\nInsights: This plot shows the results of a one-way ANOVA test on the unit price per square meter by flat type using the resale dataset. The x-axis shows the flat type, and the y-axis shows the unit price per square meter. The plot provides information about the mean and confidence intervals of the unit price per square meter for each flat type. The blue lines connecting the mean values show the significant pairwise comparisons between flat types, with the label indicating which flat types are significantly different from each other. The plot suggests that the unit price per square meter is significantly different among the different flat types, with 4-room and 5-room flats having the highest unit prices, followed by 3-room flats. This information can be used by potential buyers and sellers of HDB flats to gain insights into the current market trends and make informed decisions.\n\n\n2.6 Resale Price by Town and Flat Type\n\nggplot(resale_345room_2022, aes(x=town, y=resale_price/1000, fill=flat_type)) + \n  geom_boxplot() + \n  xlab(\"Town\") + \n  ylab(\"Resale Price (in '000s')\") + \n  scale_fill_manual(values=c(\"blue\", \"red\", \"green\", \"orange\", \"purple\", \"pink\")) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), \n        plot.margin = unit(c(1, 5, 1, 1), \"cm\"), \n        axis.title.x = element_text(size = 18), \n        axis.title.y = element_text(size = 18),\n        legend.title = element_blank(),\n        legend.text = element_text(size = 18)) +\n  labs(title = \"Resale Price by Town and Flat Type\") +\n  scale_y_continuous(labels = function(x) paste0(x, \"k\")) +\n  coord_cartesian(clip = \"off\", ylim = c(0, 1400)) +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n        axis.text.y = element_text(size = 18),\n        legend.position = \"bottom\",\n        legend.box = \"horizontal\",\n        legend.margin = margin(t = 0, r = 0, b = 0, l = 0)\n        ) \n\n\n\n\nInsights: The chart shows the distribution of resale flat prices across different towns in Singapore, separated by flat type.\nThe first thing we can observe is that resale prices are generally higher for larger flats, as expected. The prices of 5-room and executive flats are consistently higher across all towns than 3-room and 4-room flats.\nWe can also see that the range of prices varies widely across different towns, even for the same flat type. For example, in the town of Bukit Merah, the resale price for a 3-room flat ranges from about SGD 200,000 to over SGD 700,000, while in Jurong West, the price range is from about SGD 100,000 to just over SGD 500,000. This suggests that location is an important factor in determining resale flat prices.\nFinally, we can observe that there are some towns where a particular flat type is more dominant than others. For example, in Woodlands, 4-room flats make up the majority of the resale market, while in Marine Parade, executive flats are the most common. This could be useful information for people who are looking to buy or sell a resale flat in a particular town."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#conclusions-and-takeaways",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#conclusions-and-takeaways",
    "title": "Take-home Exercise 3",
    "section": "3.0 Conclusions and Takeaways",
    "text": "3.0 Conclusions and Takeaways\n\nConclusions\nThe dataset on resale flat prices in Singapore provides valuable insights on the factors that influence the market. The box plot chart revealed that flat type and location play a significant role in determining resale prices. Larger flats, such as 5-room and executive flats, are consistently more expensive than 3-room and 4-room flats. Moreover, the resale price range varies widely across different towns, highlighting the importance of location in determining flat prices. The data also shows that the dominance of a particular flat type varies from town to town. The analysis of lease commence dates for second-hand flats further reveals interesting trends. There was a noticeable rise in the lease commence dates for 4 and 5 room flats in 2021, with a sharp decline during the COVID-19 pandemic. This indicates a decline in the construction of new homes during the pandemic. Overall, these insights are useful for buyers and sellers looking to make informed decisions in the Singapore resale flat market.\n\n\nKey Takeaways\n\nFilters and aggregation are important tools for analyzing and summarizing data frames.\nBox plots can be used to visualize the distribution of data and highlight the range of uncertain values."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "1.0 Overview\nThis take-home exercise is done based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2.\n\n\n2.0 Data Preparation\nIn this step, we will load the libraries and dataset\n\n# install and load libraries \npackages = c('tidyverse', 'knitr', 'ggdist', 'scales', 'grid', 'gridExtra',\n             'formattable', 'patchwork', 'plotly')\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\ndf <- read_csv('data/respopagesextod2022.csv')\n\n\nlibrary(rmarkdown)\npaged_table(df)\n\n\n\n  \n\n\n\n\n\n3.0 Visualization Remake Using R\n\n3.1 Critique\n\n\n\n\n\n\nClarity\n\nThe X-axis is very unclear, it has 2 rows at the bottom. the first row is number, audience could get confused since it could represent population or area. The last row is male and female, it could be simplly represented using the color legend to reduce the duplicates.\nThe number label on the bar chart is also meaningless, some bar have but some bar don’t have. Audience also won’t waste time distinguish them, they could simply find the longest bar and hover on it to view the tooltip.\nThe graph does not have data source caption.\n\nAesthetics\n\nThe graph follows the overall format of pyramid in trellis display, however looks very messy.\nThe Y-axis looks very crowded, it’s very hard for audience to map the bar charts with the Y label.\nThe font size of title is too small, audience is hard to capture the title information.\nThe margin space between rows is too big, it wasted too much space for the site name.\n\n\n\n\n3.2 Step by Step Plot Remake Using R\n\n3.2.1 Exploration using ggplot()\n\nggplot(df, aes (x = AG, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip()\n\n\n\n\n\n\n3.2.2 Data Wrangling\nTransforming the data to one gender.\n\nPopdata_males <- df %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Pop = -Pop)\nglimpse(Popdata_males)\n\nRows: 50,464\nColumns: 7\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ AG   <chr> \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to…\n$ Sex  <chr> \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"M…\n$ TOD  <chr> \"HDB 1- and 2-Room Flats\", \"HDB 3-Room Flats\", \"HDB 4-Room Flats\"…\n$ Pop  <dbl> 0, -10, -10, -30, 0, -50, 0, 0, 0, -10, -10, -30, 0, -80, 0, 0, 0…\n$ Time <dbl> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,…\n\n\n\nPopdata_females <-df %>%\n  filter(`Sex` ==  \"Females\") \nPopdata_T <- rbind(Popdata_males,Popdata_females)\npaged_table(Popdata_T)\n\n\n\n  \n\n\n\n\n\n3.2.3 Initial Pyramid Plot\n\nggplot(Popdata_T, aes (x = AG, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip()\n\n\n\n\n\n\n3.2.4 Planning Areas\n\nprint(unique(Popdata_T$PA))\n\n [1] \"Ang Mo Kio\"              \"Bedok\"                  \n [3] \"Bishan\"                  \"Boon Lay\"               \n [5] \"Bukit Batok\"             \"Bukit Merah\"            \n [7] \"Bukit Panjang\"           \"Bukit Timah\"            \n [9] \"Central Water Catchment\" \"Changi\"                 \n[11] \"Changi Bay\"              \"Choa Chu Kang\"          \n[13] \"Clementi\"                \"Downtown Core\"          \n[15] \"Geylang\"                 \"Hougang\"                \n[17] \"Jurong East\"             \"Jurong West\"            \n[19] \"Kallang\"                 \"Lim Chu Kang\"           \n[21] \"Mandai\"                  \"Marina East\"            \n[23] \"Marina South\"            \"Marine Parade\"          \n[25] \"Museum\"                  \"Newton\"                 \n[27] \"North-Eastern Islands\"   \"Novena\"                 \n[29] \"Orchard\"                 \"Outram\"                 \n[31] \"Pasir Ris\"               \"Paya Lebar\"             \n[33] \"Pioneer\"                 \"Punggol\"                \n[35] \"Queenstown\"              \"River Valley\"           \n[37] \"Rochor\"                  \"Seletar\"                \n[39] \"Sembawang\"               \"Sengkang\"               \n[41] \"Serangoon\"               \"Simpang\"                \n[43] \"Singapore River\"         \"Southern Islands\"       \n[45] \"Straits View\"            \"Sungei Kadut\"           \n[47] \"Tampines\"                \"Tanglin\"                \n[49] \"Tengah\"                  \"Toa Payoh\"              \n[51] \"Tuas\"                    \"Western Islands\"        \n[53] \"Western Water Catchment\" \"Woodlands\"              \n[55] \"Yishun\"                 \n\n\n\n\n3.2.5 Trellis display\n\nxbrks <- seq(-50000, 50000, 10000)\nxlabls <- paste0(as.character(c(seq(50, 0, -10), seq(10, 50, 10))))\n\np <- ggplot(subset(Popdata_T, PA %in% c(\"Ang Mo Kio\", \"Sengkang\", \"Tampines\", \"Jurong East\", \"Bishan\", \"Woodlands\",\"Yishun\",\"Punggol\",\"Outram\")), \n      aes (x = AG, y = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\", width = .9 ) +\n      scale_y_continuous(breaks = xbrks, labels = xlabls, name = \"Population Size ('000)\") +\n      xlab(\"Age Groups\") +\n      coord_flip() +\n      theme_bw() \n\n\nxbrks1 <- seq(-50000, 50000, 10000)\nxlabls1 <- paste0(as.character(c(seq(50, 0, -10), seq(10, 50, 10))))\np1 <- p +  facet_wrap (~ PA, nrow = 3, ncol = 3) + \n            xlab(\"Age Groups\") +\n            ggtitle(\"Age-Sex Pyramid for Selected 9 Planning Areas by Population\")+\n            scale_y_continuous(breaks = xbrks1, labels = xlabls1, name = \"Population Size ('000)\")\n\nggplotly(p1)\n\n\n\n\n\nSource: Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022\nThe makeover graph kept the display template of the original graph and the overall format, and improved on a few elements:\n\n\nClarity\n\nNow the X-axis label is very clear which represents the population, and right corner has the legend to clarify the representation of right and left bars.\nThe number label has been removed from the bar charts. Audience can hover on a specific row to view the details.\nAdded the data source caption\n\n\n\nAesthetics\n\nThe Y-axis become larger now, there are some space in between the text labels.\nThe margin space between rows have been reduced, now looks more clear.\nThe title of the graph is more obvious now.\n\n\n\n\n4.0 Learning Point\nAfter taken the session 2, I realized a lot of deficiencies in exercise 1. It provide me with an opportunity to fix and improve the graph design, also give me a chance to working with R. My key takeaways are:\n\nThe graph should be as simple as possible, but the component of the graph like title, legend and caption is very important. It should be very clear and highlighted."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are: tidyverse and ggiraph.\n\npacman::p_load(ggiraph, tidyverse)\n\nImport data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize=0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE) #<<\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) #<<\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\npacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n\ncheck_model(model1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "pacman::p_load(ggtern,plotly, tidyverse,corrplot, tidyverse, ggstatsplot, ggcorrplot,seriation, dendextend, heatmaply, tidyverse)\nImport Data\nNext, use the mutate() function of dplyr package to derive three new measures, namely: young, active, and old."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-an-interative-ternary-diagram",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-an-interative-ternary-diagram",
    "title": "In-class Exercise 5",
    "section": "Plotting an interative ternary diagram",
    "text": "Plotting an interative ternary diagram\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-2",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-2",
    "title": "In-class Exercise 5",
    "section": "Part 2",
    "text": "Part 2\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\npairs(wine[,1:11])\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-3",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-3",
    "title": "In-class Exercise 5",
    "section": "Part 3",
    "text": "Part 3\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\n\nrow.names(wh) <- wh$Country\n\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  }
]