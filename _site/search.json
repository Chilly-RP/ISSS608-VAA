[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Project",
    "section": "",
    "text": "pacman::p_load('tidyverse','tidyquant','tsibble','timetk','feasts','ggplot2','stats','lubridate','data.table','rmarkdown','knitr','nycflights13', 'dplyr')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#import-data-set",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#import-data-set",
    "title": "Project",
    "section": "Import Data Set",
    "text": "Import Data Set\n\nprice_daily = read_csv(\"data/daily.csv\")\n\npaged_table(price_daily)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#time-series-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#time-series-analysis",
    "title": "Project",
    "section": "Time Series Analysis",
    "text": "Time Series Analysis\nThis plot can be summarize by “week” or “month”\n\nprice_daily %>%\n  dplyr::group_by(Country) %>%\n  summarise_by_time(\n    Date, .by = \"week\",\n    Price = SUM(`Price (EUR/MWhe)`)\n  ) %>%\n  plot_time_series(Date, Price, .facet_ncol = 2, .interactive = FALSE, .y_intercept = 0)\n\n\n\n\nUser is able to select countries and the time range\n\n# Vector of country names to filter\ncountries_to_keep <- c(\"France\", \"Spain\", \"Italy\")\n\nprice_daily %>%\n  dplyr::filter(Country %in% countries_to_keep)%>%\n  dplyr::group_by(Country) %>%\n  filter_by_time(Date, \"2021-06-01\",\"2022-12-31\") %>%\n  summarise_by_time(\n    Date, .by = \"week\",\n    Price = SUM(`Price (EUR/MWhe)`)\n  ) %>%\n  plot_time_series(Date, Price, .facet_ncol = 2, .interactive = FALSE, .y_intercept = 0)\n\n\n\n\n\npaged_table(price_daily)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#group-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#group-plot",
    "title": "Project",
    "section": "Group Plot",
    "text": "Group Plot\nUser can edit Year and country\n\nlibrary(lubridate)\n\nprice_daily %>%\n  dplyr::filter(Date >= as.Date(\"2022-01-01\") & Date <= as.Date(\"2022-12-31\")) %>%\n  dplyr::mutate(month = month(Date)) %>%\n  dplyr::group_by(Country) %>%\n  dplyr::mutate(quarter= case_when(\n      month >= 1 & month <= 3 ~ 'Q1'\n      , month >= 4 & month <= 6 ~ 'Q2'\n      , month >= 7 & month <= 9 ~ 'Q3'\n      , month >= 10 & month <= 12 ~ 'Q4')) %>%\n  dplyr::filter(Country==\"France\") %>%\n\n  plot_time_series(.date_var=Date, .value = `Price (EUR/MWhe)`, \n                   .color_var = month (Date), \n                   .interactive=FALSE,\n                   .facet_ncol = 2, .facet_scales = \"free\",\n                   .title = \"Daily Electricity Price Bases on Individual Country in 2022\",\n                   .x_lab = \"Time period\",\n                   .y_lab = \"Price\",\n                   .color_lab = \"Month\") + scale_y_continuous(labels = scales::comma_format()\n                   )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#seasonal-trends-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#seasonal-trends-analysis",
    "title": "Project",
    "section": "Seasonal Trends Analysis",
    "text": "Seasonal Trends Analysis\n\nprice_daily %>%\n    dplyr::filter(Date >= as.Date(\"2022-01-01\") & Date <= as.Date(\"2022-12-31\")) %>%\n    plot_seasonal_diagnostics(Date, `Price (EUR/MWhe)`, .interactive = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Time Series Forecast",
    "section": "",
    "text": "pacman::p_load('dplyr','tidyverse','tidymodels','tidyquant','earth','timetk','recipes','tsibble','feasts','forecast','fable',\n             'tsibbletalk', 'tseries'\n             ,'modeltime','stats','data.table','ggplot2','plotly'\n             ,'rmarkdown','knitr','feasts','prophet')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#acf-pacf",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#acf-pacf",
    "title": "Time Series Forecast",
    "section": "ACF & PACF",
    "text": "ACF & PACF\n\ntest <- price_daily %>%\n  filter(\n    Country == \"Austria\",\n  ) \ntest <- test[c(\"Date\",\"Price (EUR/MWhe)\")]\n\n\ntest_ts <- ts(test[,-1], start = c(2015, 1, 1),  \n                    end = c(2023, 2, 28),    \n                    frequency = 365)\n\n\n\nadf.test(test_ts)\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  test_ts\nDickey-Fuller = -4.3625, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\nplot.ts(test_ts)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#test-stationary",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#test-stationary",
    "title": "Time Series Forecast",
    "section": "Test Stationary:",
    "text": "Test Stationary:\n\nadf.test(test$`Price (EUR/MWhe)`)\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  test$`Price (EUR/MWhe)`\nDickey-Fuller = -4.439, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\nplot.ts(test$`Price (EUR/MWhe)`)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-difference",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-difference",
    "title": "Time Series Forecast",
    "section": "Data Difference",
    "text": "Data Difference\n\ndtest=diff(test$`Price (EUR/MWhe)`)\n\n\nadf.test(dtest)\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  dtest\nDickey-Fuller = -15.62, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\nplot.ts(dtest)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#before-difference",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#before-difference",
    "title": "Time Series Forecast",
    "section": "Before Difference",
    "text": "Before Difference\n\nacf(test_ts)\n\n\n\n\n\npacf(test_ts)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#after-stationary",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#after-stationary",
    "title": "Time Series Forecast",
    "section": "After Stationary",
    "text": "After Stationary\n\nacf(dtest)\n\n\n\n\n\npacf(dtest)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-split",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-split",
    "title": "Time Series Forecast",
    "section": "Data Split",
    "text": "Data Split\n\nprice_daily_2022 <- price_daily%>%\n  dplyr::filter(Date >= as.Date(\"2020-01-01\") & Date <= as.Date(\"2022-12-31\") \n                & Country == \"Austria\")\n# Split Data 80/20\nsplits = initial_time_split(price_daily_2022, prop = 0.8)\n\n\n** Model 1: Auto ARIMA**\n\nmodel_fit_arima_no_boost = arima_reg() %>%\n    set_engine(engine = \"auto_arima\") %>%\n    fit(`Price (EUR/MWhe)` ~ Date, data = training(splits))\n\n\n\nModel 2: Boosted Auto ARIMA\n\nmodel_fit_arima_boosted = arima_boost(\n    min_n = 2,\n    learn_rate = 0.015\n) %>%\n    set_engine(engine = \"auto_arima_xgboost\") %>%\n    fit(`Price (EUR/MWhe)` ~ Date + as.numeric(Date),\n        data = training(splits))\n\n\n\nModel 4: Prophet\n\nmodel_fit_prophet = prophet_reg() %>%\n    set_engine(engine = \"prophet\") %>%\n    fit(`Price (EUR/MWhe)` ~ Date, data = training(splits))\n\n\nmodels_sq_stock = modeltime_table(\n    model_fit_arima_no_boost,\n    model_fit_arima_boosted,\n    model_fit_prophet\n)\n\ncalibration_sq_stock = models_sq_stock %>%\n    modeltime_calibrate(new_data = testing(splits))\n\ncalibration_sq_stock %>%\n    modeltime_forecast(\n        new_data    = testing(splits),\n        actual_data = price_daily_2022\n    ) %>%\n    plot_modeltime_forecast(\n      .legend_max_width = 35, \n      .interactive      = FALSE,\n      .plotly_slider=FALSE\n    )\n\n\n\n\n\nprice_daily_2022%>% \n  plot_time_series(\n    .date_var    = Date, \n    .value       = `Price (EUR/MWhe)`, \n    .smooth      = FALSE, \n    .interactive = FALSE\n  )\n\n\n\n\n\nFORECAST_HORIZON = 360\n\nprice_daily_2022_extended = price_daily_2022 %>%\n    future_frame(\n        .length_out = FORECAST_HORIZON,\n        .bind_data  = TRUE\n    ) %>%\n    ungroup()\n\n\ntrain_data = price_daily_2022_extended %>%\n    drop_na()\ntest_data = price_daily_2022_extended %>%\n    filter(is.na(`Price (EUR/MWhe)`))\n\n\n\nModel: Auto ARIMA XGBOOST\n\nmodel_fit_arima_boosted = arima_boost(\n    min_n = 2,\n    learn_rate = 0.015\n) %>%\n    set_engine(engine = \"auto_arima_xgboost\") %>%\n    fit(`Price (EUR/MWhe)` ~ Date + as.numeric(Date),\n        data = train_data)\n\n\nmodels_sq_stock = modeltime_table(\n    model_fit_arima_boosted\n)\n\nmodels_sq_stock %>%\n    modeltime_forecast(\n        new_data    = test_data,\n        actual_data = price_daily_2022\n    ) %>%\n    plot_modeltime_forecast(\n      .legend_max_width = 35, \n      .interactive      = FALSE,\n      .plotly_slider=FALSE\n    )\n\n\n\n\n\n\nTest After Data Differencing\nConvert the time series data to a tibble format using timetk:\n\ndates <- seq(as.Date(\"2015-01-01\"), by = \"day\", length.out = length(dtest))\ntime_series_tbl <- tibble(Date = dates, Value = dtest)\n\nFit an ARIMA model to the differenced data using the forecast package\n\narima_model <- auto.arima(time_series_tbl$Value)\n\n\nsummary(arima_model)\n\nSeries: time_series_tbl$Value \nARIMA(5,0,0) with zero mean \n\nCoefficients:\n          ar1      ar2      ar3      ar4      ar5\n      -0.0468  -0.3612  -0.1661  -0.1998  -0.2737\ns.e.   0.0176   0.0173   0.0182   0.0173   0.0176\n\nsigma^2 = 376.4:  log likelihood = -13062.81\nAIC=26137.61   AICc=26137.64   BIC=26173.61\n\nTraining set error measures:\n                     ME     RMSE      MAE MPE MAPE      MASE         ACF1\nTraining set 0.07151326 19.38362 10.46434 Inf  Inf 0.6357601 -0.009302856\n\n\nForecast\n\nn_forecast <- 360\nforecasted_diff <- forecast(arima_model, h = n_forecast)$mean\n\n\nlast_observed_value <- tail(test$`Price (EUR/MWhe)`, 1)\nforecasted_values <- cumsum(c(last_observed_value, forecasted_diff))\nforecasted_values <- forecasted_values[-1]\n\n#print(forecasted_values)\n\n\nforecast_dates <- seq(tail(test$Date, 1) + days(1), by = \"day\", length.out = n_forecast)\ncombined_dates <- c(test$Date, forecast_dates)\ncombined_values <- c(test$`Price (EUR/MWhe)`, forecasted_values)\n\n\nobserved_type <- rep(\"Observed\", length(test$Date))\nforecasted_type <- rep(\"Forecasted\", n_forecast)\ncombined_type <- c(observed_type, forecasted_type)\n\ncombined_data <- tibble(Date = combined_dates, Value = combined_values,  Type = combined_type)\n\n\nggplot(combined_data, aes(x = Date, y = Value, color = Type)) +\n  geom_line() +\n  ggtitle(\"Time Series Forecast\") +\n  xlab(\"Date\") +\n  ylab(\"Value\") +\n  scale_color_manual(values = c(\"blue\", \"green\")) +\n  theme_minimal()\n\n\n\n\n\n\nForecast Using Prophet\n\nprophet_data <- time_series_tbl %>%\n  rename(ds = Date, y = Value)\n\n\nprophet_model <- prophet(prophet_data)\n\n\nfuture_dates <- make_future_dataframe(prophet_model, periods = n_forecast, freq = \"day\")\n\n\nprophet_forecast <- predict(prophet_model, future_dates)\n\n\nforecasted_values_prophet <- tail(prophet_forecast$yhat, n_forecast)\n\n\nlast_observed_value <- tail(test$`Price (EUR/MWhe)`, 1)\nforecasted_values_prophet <- cumsum(c(last_observed_value, forecasted_values_prophet))\nforecasted_values_prophet <- forecasted_values_prophet[-1]\n\n\n\nTable Concat\n\nhistorical_data <- test %>%\n  rename(ds = Date, y = `Price (EUR/MWhe)`) %>%\n  mutate(Type = \"Observed\")\n\n\nforecast_dates <- seq(tail(test$Date, 1) + days(1), by = \"day\", length.out = n_forecast)\nforecast_data <- tibble(ds = forecast_dates, y = forecasted_values_prophet, Type = \"Forecasted\")\n\n\ncombined_data <- bind_rows(historical_data, forecast_data)\n\n\nlibrary(ggplot2)\n\nggplot(combined_data, aes(x = ds, y = y, color = Type)) +\n  geom_line() +\n  ggtitle(\"Time Series Forecast\") +\n  xlab(\"Date\") +\n  ylab(\"Value\") +\n  scale_color_manual(values = c(\"blue\", \"red\")) +\n  theme_minimal()\n\n\n\n\n\n\nExponential Smoothing State Space Model (ETS):\n\n# Fit the ETS model on the differenced data\nets_model_diff <- ets(time_series_tbl$Value)\n\n# Forecast the next n time points using the ETS model\nets_forecast_diff <- forecast(ets_model_diff, h = n_forecast)\n\n# Invert the first-order differencing\nets_forecast_original_scale <- cumsum(c(last_observed_value, ets_forecast_diff$mean))[-1]\n\n\nhistorical_data <- test %>%\n  rename(ds = Date, y = `Price (EUR/MWhe)`) %>%\n  mutate(Type = \"Observed\")\n\nets_forecast_dates <- seq(tail(test$Date, 1) + days(1), by = \"day\", length.out = n_forecast)\nets_forecast_data <- tibble(ds = ets_forecast_dates, y = ets_forecast_original_scale, Type = \"Forecasted\")\nets_combined_data <- bind_rows(historical_data, ets_forecast_data)\n\n\nggplot(ets_combined_data, aes(x = ds, y = y, color = Type)) +\n  geom_line() +\n  ggtitle(\"Time Series Forecast\") +\n  xlab(\"Date\") +\n  ylab(\"Value\") +\n  scale_color_manual(values = c(\"blue\", \"red\")) +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Time Series Analysis",
    "section": "",
    "text": "pacman::p_load('dplyr','tidyverse','tidymodels','tidyquant','earth','timetk','recipes','tsibble','feasts','forecast','fable',\n             'tsibbletalk', 'tseries'\n             ,'modeltime','stats','data.table','ggplot2','plotly'\n             ,'rmarkdown','knitr','feasts','prophet')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#load-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#load-data",
    "title": "Time Series Analysis",
    "section": "Load Data",
    "text": "Load Data\n\nprice_daily = read_csv(\"../Hands-on_Ex04/data/daily.csv\")\n\npaged_table(price_daily)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-eda",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-eda",
    "title": "Time Series Analysis",
    "section": "Data EDA",
    "text": "Data EDA\nCountry Filter\n\nprice_daily_filtered <- price_daily %>%\n  filter(\n    Country == \"Austria\", # Change this by user selection\n  ) \n\nprice_daily_filtered <- price_daily_filtered[c(\"Date\",\"Price (EUR/MWhe)\")]\n\n\nStationary Test on Raw Data\n\nadf.test(price_daily_filtered$`Price (EUR/MWhe)`)\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  price_daily_filtered$`Price (EUR/MWhe)`\nDickey-Fuller = -4.439, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\nIt’s already a stationary data\n\n\nACF & PACF\n\nRAW Data\n\nplot.ts(price_daily_filtered$`Price (EUR/MWhe)`)\n\n\n\n\n\n\nACF\n\nacf(price_daily_filtered$`Price (EUR/MWhe)`,main = \"ACF for Raw Price\")\n\n\n\n\n\n\nPACF\n\npacf(price_daily_filtered$`Price (EUR/MWhe)`,main = \"PACF for Raw Price\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#take-first-order-differencing",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#take-first-order-differencing",
    "title": "Time Series Analysis",
    "section": "Take First-order Differencing",
    "text": "Take First-order Differencing\n\nprice_daily_diff=diff(price_daily_filtered$`Price (EUR/MWhe)`)\n\n\nStationary Test\n\nadf.test(price_daily_diff)\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  price_daily_diff\nDickey-Fuller = -15.62, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\nDifferencing Data\n\nplot.ts(price_daily_diff)\n\n\n\n\n\n\nACF\n\nacf(price_daily_diff, main=\"ACF for Differencing Data\")\n\n\n\n\n\n\nPACF\n\nacf(price_daily_diff, main=\"PACF for Differencing Data\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. if they are, then they will be launched into R\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course.\n欢迎来到ISSS608可视化分析与应用课程。在这个网站上，您会找到我为这门课程准备的作业。\nISSS608 시각 분석 및 응용에 오신 것을 환영합니다. 이 웹사이트에서는 이 과목을 위해 준비한 과제를 찾으실 수 있습니다.\nISSS608 ビジュアルアナリティクスとアプリケーションへようこそ。このウェブサイトでは、このコースのために私が準備した課題が見つかります。\nSelamat datang ke ISSS608 Visual Analytics and Applications. Di laman web ini, anda akan menjumpai kerja kursus saya yang disediakan untuk kursus ini.\nISSS608 विजुअल एनालिटिक्स और एप्लीकेशंस में आपका स्वागत है। इस वेबसाइट पर, आप इस कोर्स के लिए मेरे कोर्सवर्क पा सकते हैं।"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Age-sex pyramid is an analytical visualisation commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, you are required to reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. Instead of plotting a single age-sex pyramid, however, you are required to display nine selected planning areas on a single view by using trellis display (also know as small-multiple plot).\nYou can fund the links to download the dataset below:\nDownload .xls\nDownload .csv"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-in-9-selected-area-using-trellis-display",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid-in-9-selected-area-using-trellis-display",
    "title": "Take-home Exercise 1",
    "section": "1.0 Age-sex Pyramid in 9 Selected Area using Trellis Display",
    "text": "1.0 Age-sex Pyramid in 9 Selected Area using Trellis Display\n\n1.1 Sketch of Proposed Design\nFor 1 single sheet:\n\n\n\n1.2 Clarity\n\nContent: The proposed design used male and female population, age group and location. We need to calculate the individual population using the total population by ourselves.\nX-axis: The x-axis should has the same scale for every plots.\nY-axis: It shows the different age groups.\nLegend: In the legend I put the percentage of total population.\n\n\n\n1.3 Aesthetics\n\nChoose of color palette\nThe pink color is often associate with women, hence I use pink color for female population to give audience a better understanding.\n\n\n\n1.4 Proposed Visualization on Tableau"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#step-by-step-preparation",
    "title": "Take-home Exercise 1",
    "section": "2.0 Step-by-step Preparation",
    "text": "2.0 Step-by-step Preparation\n\nNo. Step Action\n\n\n\n\n\n\n\nNo.\nStep\nAction\n\n\n\n\n1\nLoad the CSV file into Tableau\n\n\n\n2\nGo to sheet 1 tab and create calculation field for Population\n\n\n\n3\nAdd the query and filter out the population for both Male and Female.\n\n\n\n\n4\nDrag Age to the rows and 2 population to the columns.\n\n\n\n5\nDrag PA to the filters, and select Ang Mo Kio.\n\n\n\n\n6\nEdit Axis of Female. Check reversed for Female and change the tick interval to fixed 1,000 under tick marks tab.\n\n\n\n\n7\nChange the bar color for female and add label for both female and male. Then sort the y-axis in descending order.\n\n\n\n8\nChange the Title to the dynamic format of location.\n\n\n\n9\nDuplicate the sheet 9 times and change the location filter\n\n\n\n10\nCreate the dashboard"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insights-from-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#insights-from-visualization",
    "title": "Take-home Exercise 1",
    "section": "3.0 Insights From Visualization",
    "text": "3.0 Insights From Visualization\nFrom the 9 plots, first, we can see that Singapore has lower percentage of young people. This shows that the next two decades will usher in an aging society. Second, we can see that in the common resident area, age 60-64 is the primary group which has most population, however in downtown area, age 35-39 are the major group, which represents the people in this aging group earns more."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "title": "Take-home Exercise 4",
    "section": "",
    "text": "In this take-home exercise, you are required to uncover the impact of COVID-19 as well as the global economic and political dynamic in 2022 on Singapore bi-lateral trade (i.e. Import, Export and Trade Balance) by using appropriate analytical visualisation techniques learned in Lesson 6: It’s About Time. Students are encouraged to apply appropriate interactive techniques to enhance user and data discovery experiences.\n\n\n\nFor the purpose of this take-home exercise, Merchandise Trade provided by Department of Statistics, Singapore (DOS) will be used. The data are available under the sub-section of Merchandise Trade by Region/Market. You should download the data by clicking on the link Download all in Excel on the same webpage. The study period should be between January 2020 to December 2022.\n\n\n\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse,tidyr,janitor,tibble, plotly)\n\n\n\n\n\nimports <- read_csv(\"data/import.csv\")\nexports <- read_csv(\"data/export.csv\")\n\n\nkable(head(imports))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Series\n2023 Jan\n2022 Dec\n2022 Nov\n2022 Oct\n2022 Sep\n2022 Aug\n2022 Jul\n2022 Jun\n2022 May\n2022 Apr\n2022 Mar\n2022 Feb\n2022 Jan\n2021 Dec\n2021 Nov\n2021 Oct\n2021 Sep\n2021 Aug\n2021 Jul\n2021 Jun\n2021 May\n2021 Apr\n2021 Mar\n2021 Feb\n2021 Jan\n2020 Dec\n2020 Nov\n2020 Oct\n2020 Sep\n2020 Aug\n2020 Jul\n2020 Jun\n2020 May\n2020 Apr\n2020 Mar\n2020 Feb\n2020 Jan\n2019 Dec\n2019 Nov\n2019 Oct\n2019 Sep\n2019 Aug\n2019 Jul\n2019 Jun\n2019 May\n2019 Apr\n2019 Mar\n2019 Feb\n2019 Jan\n2018 Dec\n2018 Nov\n2018 Oct\n2018 Sep\n2018 Aug\n2018 Jul\n2018 Jun\n2018 May\n2018 Apr\n2018 Mar\n2018 Feb\n2018 Jan\n2017 Dec\n2017 Nov\n2017 Oct\n2017 Sep\n2017 Aug\n2017 Jul\n2017 Jun\n2017 May\n2017 Apr\n2017 Mar\n2017 Feb\n2017 Jan\n2016 Dec\n2016 Nov\n2016 Oct\n2016 Sep\n2016 Aug\n2016 Jul\n2016 Jun\n2016 May\n2016 Apr\n2016 Mar\n2016 Feb\n2016 Jan\n2015 Dec\n2015 Nov\n2015 Oct\n2015 Sep\n2015 Aug\n2015 Jul\n2015 Jun\n2015 May\n2015 Apr\n2015 Mar\n2015 Feb\n2015 Jan\n2014 Dec\n2014 Nov\n2014 Oct\n2014 Sep\n2014 Aug\n2014 Jul\n2014 Jun\n2014 May\n2014 Apr\n2014 Mar\n2014 Feb\n2014 Jan\n2013 Dec\n2013 Nov\n2013 Oct\n2013 Sep\n2013 Aug\n2013 Jul\n2013 Jun\n2013 May\n2013 Apr\n2013 Mar\n2013 Feb\n2013 Jan\n2012 Dec\n2012 Nov\n2012 Oct\n2012 Sep\n2012 Aug\n2012 Jul\n2012 Jun\n2012 May\n2012 Apr\n2012 Mar\n2012 Feb\n2012 Jan\n2011 Dec\n2011 Nov\n2011 Oct\n2011 Sep\n2011 Aug\n2011 Jul\n2011 Jun\n2011 May\n2011 Apr\n2011 Mar\n2011 Feb\n2011 Jan\n2010 Dec\n2010 Nov\n2010 Oct\n2010 Sep\n2010 Aug\n2010 Jul\n2010 Jun\n2010 May\n2010 Apr\n2010 Mar\n2010 Feb\n2010 Jan\n2009 Dec\n2009 Nov\n2009 Oct\n2009 Sep\n2009 Aug\n2009 Jul\n2009 Jun\n2009 May\n2009 Apr\n2009 Mar\n2009 Feb\n2009 Jan\n2008 Dec\n2008 Nov\n2008 Oct\n2008 Sep\n2008 Aug\n2008 Jul\n2008 Jun\n2008 May\n2008 Apr\n2008 Mar\n2008 Feb\n2008 Jan\n2007 Dec\n2007 Nov\n2007 Oct\n2007 Sep\n2007 Aug\n2007 Jul\n2007 Jun\n2007 May\n2007 Apr\n2007 Mar\n2007 Feb\n2007 Jan\n2006 Dec\n2006 Nov\n2006 Oct\n2006 Sep\n2006 Aug\n2006 Jul\n2006 Jun\n2006 May\n2006 Apr\n2006 Mar\n2006 Feb\n2006 Jan\n2005 Dec\n2005 Nov\n2005 Oct\n2005 Sep\n2005 Aug\n2005 Jul\n2005 Jun\n2005 May\n2005 Apr\n2005 Mar\n2005 Feb\n2005 Jan\n2004 Dec\n2004 Nov\n2004 Oct\n2004 Sep\n2004 Aug\n2004 Jul\n2004 Jun\n2004 May\n2004 Apr\n2004 Mar\n2004 Feb\n2004 Jan\n2003 Dec\n2003 Nov\n2003 Oct\n2003 Sep\n2003 Aug\n2003 Jul\n2003 Jun\n2003 May\n2003 Apr\n2003 Mar\n2003 Feb\n2003 Jan\n2002 Dec\n2002 Nov\n2002 Oct\n2002 Sep\n2002 Aug\n2002 Jul\n2002 Jun\n2002 May\n2002 Apr\n2002 Mar\n2002 Feb\n2002 Jan\n2001 Dec\n2001 Nov\n2001 Oct\n2001 Sep\n2001 Aug\n2001 Jul\n2001 Jun\n2001 May\n2001 Apr\n2001 Mar\n2001 Feb\n2001 Jan\n2000 Dec\n2000 Nov\n2000 Oct\n2000 Sep\n2000 Aug\n2000 Jul\n2000 Jun\n2000 May\n2000 Apr\n2000 Mar\n2000 Feb\n2000 Jan\n1999 Dec\n1999 Nov\n1999 Oct\n1999 Sep\n1999 Aug\n1999 Jul\n1999 Jun\n1999 May\n1999 Apr\n1999 Mar\n1999 Feb\n1999 Jan\n1998 Dec\n1998 Nov\n1998 Oct\n1998 Sep\n1998 Aug\n1998 Jul\n1998 Jun\n1998 May\n1998 Apr\n1998 Mar\n1998 Feb\n1998 Jan\n1997 Dec\n1997 Nov\n1997 Oct\n1997 Sep\n1997 Aug\n1997 Jul\n1997 Jun\n1997 May\n1997 Apr\n1997 Mar\n1997 Feb\n1997 Jan\n1996 Dec\n1996 Nov\n1996 Oct\n1996 Sep\n1996 Aug\n1996 Jul\n1996 Jun\n1996 May\n1996 Apr\n1996 Mar\n1996 Feb\n1996 Jan\n1995 Dec\n1995 Nov\n1995 Oct\n1995 Sep\n1995 Aug\n1995 Jul\n1995 Jun\n1995 May\n1995 Apr\n1995 Mar\n1995 Feb\n1995 Jan\n1994 Dec\n1994 Nov\n1994 Oct\n1994 Sep\n1994 Aug\n1994 Jul\n1994 Jun\n1994 May\n1994 Apr\n1994 Mar\n1994 Feb\n1994 Jan\n1993 Dec\n1993 Nov\n1993 Oct\n1993 Sep\n1993 Aug\n1993 Jul\n1993 Jun\n1993 May\n1993 Apr\n1993 Mar\n1993 Feb\n1993 Jan\n1992 Dec\n1992 Nov\n1992 Oct\n1992 Sep\n1992 Aug\n1992 Jul\n1992 Jun\n1992 May\n1992 Apr\n1992 Mar\n1992 Feb\n1992 Jan\n1991 Dec\n1991 Nov\n1991 Oct\n1991 Sep\n1991 Aug\n1991 Jul\n1991 Jun\n1991 May\n1991 Apr\n1991 Mar\n1991 Feb\n1991 Jan\n1990 Dec\n1990 Nov\n1990 Oct\n1990 Sep\n1990 Aug\n1990 Jul\n1990 Jun\n1990 May\n1990 Apr\n1990 Mar\n1990 Feb\n1990 Jan\n1989 Dec\n1989 Nov\n1989 Oct\n1989 Sep\n1989 Aug\n1989 Jul\n1989 Jun\n1989 May\n1989 Apr\n1989 Mar\n1989 Feb\n1989 Jan\n1988 Dec\n1988 Nov\n1988 Oct\n1988 Sep\n1988 Aug\n1988 Jul\n1988 Jun\n1988 May\n1988 Apr\n1988 Mar\n1988 Feb\n1988 Jan\n1987 Dec\n1987 Nov\n1987 Oct\n1987 Sep\n1987 Aug\n1987 Jul\n1987 Jun\n1987 May\n1987 Apr\n1987 Mar\n1987 Feb\n1987 Jan\n1986 Dec\n1986 Nov\n1986 Oct\n1986 Sep\n1986 Aug\n1986 Jul\n1986 Jun\n1986 May\n1986 Apr\n1986 Mar\n1986 Feb\n1986 Jan\n1985 Dec\n1985 Nov\n1985 Oct\n1985 Sep\n1985 Aug\n1985 Jul\n1985 Jun\n1985 May\n1985 Apr\n1985 Mar\n1985 Feb\n1985 Jan\n1984 Dec\n1984 Nov\n1984 Oct\n1984 Sep\n1984 Aug\n1984 Jul\n1984 Jun\n1984 May\n1984 Apr\n1984 Mar\n1984 Feb\n1984 Jan\n1983 Dec\n1983 Nov\n1983 Oct\n1983 Sep\n1983 Aug\n1983 Jul\n1983 Jun\n1983 May\n1983 Apr\n1983 Mar\n1983 Feb\n1983 Jan\n1982 Dec\n1982 Nov\n1982 Oct\n1982 Sep\n1982 Aug\n1982 Jul\n1982 Jun\n1982 May\n1982 Apr\n1982 Mar\n1982 Feb\n1982 Jan\n1981 Dec\n1981 Nov\n1981 Oct\n1981 Sep\n1981 Aug\n1981 Jul\n1981 Jun\n1981 May\n1981 Apr\n1981 Mar\n1981 Feb\n1981 Jan\n1980 Dec\n1980 Nov\n1980 Oct\n1980 Sep\n1980 Aug\n1980 Jul\n1980 Jun\n1980 May\n1980 Apr\n1980 Mar\n1980 Feb\n1980 Jan\n1979 Dec\n1979 Nov\n1979 Oct\n1979 Sep\n1979 Aug\n1979 Jul\n1979 Jun\n1979 May\n1979 Apr\n1979 Mar\n1979 Feb\n1979 Jan\n1978 Dec\n1978 Nov\n1978 Oct\n1978 Sep\n1978 Aug\n1978 Jul\n1978 Jun\n1978 May\n1978 Apr\n1978 Mar\n1978 Feb\n1978 Jan\n1977 Dec\n1977 Nov\n1977 Oct\n1977 Sep\n1977 Aug\n1977 Jul\n1977 Jun\n1977 May\n1977 Apr\n1977 Mar\n1977 Feb\n1977 Jan\n1976 Dec\n1976 Nov\n1976 Oct\n1976 Sep\n1976 Aug\n1976 Jul\n1976 Jun\n1976 May\n1976 Apr\n1976 Mar\n1976 Feb\n1976 Jan\n\n\n\n\nTotal Merchandise Imports (Thousand Dollars)\n44393664.0\n49869770.0\n50653907.0\n53182943.0\n55799312.0\n58466009.0\n61029374.0\n59649162.0\n57604263.0\n56116002.0\n58079982.0\n44958373.0\n50026788.0\n54349357.0\n50674908.0\n47945213.0\n45980374.0\n44714491.0\n46107788.0\n45039845.0\n41559697.0\n45169547.0\n47668437.0\n37643664.0\n39028616.0\n40154550.0\n38477878.0\n38173829.0\n38801413.0\n36472279.0\n37843646.0\n35120892.0\n31458238.0\n35878828.0\n40433029.0\n39472637.0\n41180224.0\n41580603.0\n42489886.0\n42282537.0\n39450625.0\n40998179.0\n42030046.0\n38979868.0\n42637579.0\n41294888.0\n40340098.0\n36074448.0\n41553606.0\n42566514.0\n45114564.0\n47127052.0\n41439605.0\n43802120.0\n44972517.0\n41054575.0\n42887787.0\n38382736.0\n39745452.0\n34609596.0\n38491510.0\n40104280.0\n41476983.0\n39347126.0\n35732238.0\n38702897.0\n36874744.0\n36416610.0\n39149517.0\n34542072.0\n39987555.0\n33032643.0\n36734901.0\n39473257.0\n37482999.0\n33929792.0\n32761041.0\n33527949.0\n31906437.0\n34067889.0\n32922385.0\n32237957.0\n33661999.0\n30949946.0\n30382944.0\n34868755.0\n33630636.0\n35998057.0\n35278954.0\n35260544.0\n37430942.0\n36614847.0\n33572417.0\n36970386.0\n38824707.0\n29731205.0\n35221197.0\n38374997.0\n35762528.0\n41160397.0\n40573602.0\n36885234.0\n40809150.0\n38216943.0\n41829362.0\n42799285.0\n43813748.0\n37214009.0\n41143329.0\n38,686,538\n38,981,788\n44,871,411\n41,616,787\n40,477,278\n43,645,756\n39,241,029\n41,984,109\n42,058,336\n38,088,858\n35,355,063\n40,563,794\n37,259,840\n40,081,332\n41,031,806\n37,875,867\n38,629,287\n38,990,798\n41,641,022\n42,810,254\n39,686,751\n43,698,690\n40,218,167\n40,266,013\n38,210,081\n41,868,766\n39,592,049\n38,911,564\n42,209,188\n37,264,457\n39,185,518\n39,756,662\n38,518,652\n43,060,778\n32,126,643\n37,583,825\n36,115,015\n35,795,622\n35,674,370\n35,562,647\n36,208,637\n38,506,428\n37,674,529\n33,511,638\n36,719,932\n36,362,935\n30,904,685\n33,290,120\n33,885,826\n31,415,491\n32,568,130\n33,242,874\n30,161,686\n31,670,300\n29,799,099\n27,818,221\n27,868,130\n27,730,194\n26,488,010\n25,726,467\n29,158,912\n32,855,642\n38,957,660\n41,584,525\n38,926,024\n43,365,604\n40,693,260\n38,619,579\n40,555,557\n38,648,064\n33,413,957\n38,681,524\n34,935,734\n36,053,976\n37,110,162\n32,811,183\n33,723,677\n34,151,496\n34,076,139\n32,340,922\n31,945,246\n32,640,492\n27,851,480\n30,763,489\n33,117,053\n31,957,329\n31,068,778\n32,818,225\n34,163,426\n33,155,215\n33,778,399\n32,627,841\n29,327,041\n31,515,804\n29,937,624\n27,375,920\n30,768,661\n29,184,752\n32,075,302\n29,312,727\n29,639,219\n27,943,026\n28,003,355\n26,203,333\n26,658,197\n28,178,684\n21,400,853\n24,945,420\n25,299,368\n24,894,387\n26,438,682\n25,520,660\n25,375,603\n26,647,804\n24,845,482\n24,467,390\n24,103,838\n25,214,316\n20,335,381\n21,035,150\n22,369,973\n20,077,600\n22,247,169\n20,630,297\n19,534,347\n19,832,506\n19,773,576\n18,135,977\n19,325,007\n20,441,818\n17,162,800\n18,539,098\n17,021,067\n17,690,794\n18,915,666\n17,047,877\n18,224,600\n18,668,721\n18,290,300\n17,487,220\n18,179,783\n17,547,760\n14,816,724\n15,909,729\n15,524,076\n16,568,462\n18,073,404\n16,029,478\n17,270,265\n17,417,877\n17,509,415\n17,125,687\n17,491,623\n19,116,724\n17,952,511\n17,612,616\n20,984,719\n21,041,672\n21,400,038\n21,325,111\n20,917,474\n19,865,437\n20,281,078\n18,669,571\n17,564,650\n18,704,237\n15,557,241\n15,863,851\n17,928,291\n17,374,626\n16,958,676\n16,444,304\n16,507,617\n16,699,646\n15,738,641\n15,009,917\n15,254,783\n15,235,020\n11,997,660\n12,992,380\n14,334,730\n13,093,541\n13,587,124\n14,058,810\n14,005,064\n14,735,024\n14,468,062\n12,963,883\n13,958,753\n16,061,183\n14,766,759\n13,830,549\n17,502,726\n16,775,834\n17,623,903\n17,412,112\n16,546,053\n17,547,538\n15,923,212\n16,289,060\n15,832,565\n16,729,284\n12,634,879\n15,788,034\n15,962,353\n15,880,423\n16,335,830\n14,761,790\n14,383,157\n15,785,983\n15,175,692\n15,245,468\n15,494,902\n16,418,429\n14,200,033\n15,539,334\n15,830,770\n15,691,830\n16,058,778\n14,787,061\n15,730,943\n15,532,592\n14,718,979\n14,922,431\n13,734,522\n14,664,246\n12,396,937\n12,244,388\n14,012,963\n13,438,282\n13,689,237\n13,661,781\n13,698,273\n13,591,796\n13,100,849\n13,021,032\n13,560,716\n12,544,778\n10,306,501\n11,769,574\n12,551,076\n11,534,142\n11,935,375\n12,051,975\n11,337,445\n11,852,930\n11,723,084\n11,419,871\n11,578,361\n11,561,628\n10,482,915\n9,574,146\n11,790,640\n10,663,094\n10,522,213\n9,726,572\n9,312,418\n10,213,734\n10,314,947\n8,786,922\n9,337,442\n9,725,652\n8,133,215\n9,002,815\n9,078,154\n9,313,806\n9,060,661\n8,905,213\n9,505,211\n10,418,246\n9,776,340\n9,785,944\n9,161,131\n9,668,039\n9,350,929\n10,171,241\n9,962,846\n10,242,614\n10,218,287\n8,704,397\n9,114,427\n8,836,001\n8,957,917\n8,818,823\n8,569,262\n9,262,216\n8,406,030\n8,712,990\n8,308,040\n8,598,657\n8,828,501\n8,451,166\n8,647,696\n7,657,119\n8,097,023\n8,015,335\n8,303,029\n8,490,927\n6,822,113\n6,644,115\n8,259,539\n7,799,082\n8,102,209\n7,166,715\n8,429,892\n7,503,029\n8,158,578\n6,838,830\n6,790,755\n6,268,633\n6,354,236\n6,555,218\n6,652,230\n6,629,129\n6,190,999\n6,215,154\n5,540,682\n6,219,723\n5,557,727\n5,235,972\n5,532,124\n4,826,591\n4,986,178\n4,828,720\n4,960,162\n4,864,192\n4,952,515\n4,601,977\n4,816,309\n4,491,147\n4,467,418\n4,335,254\n4,613,095\n4,787,314\n4,183,673\n4,472,337\n4,658,699\n4,567,826\n4,830,563\n4,661,139\n4,634,948\n4,505,947\n4,683,737\n4,843,832\n5,118,133\n5,012,976\n4,744,192\n5,555,553\n4,485,253\n5,888,685\n5,224,181\n4,607,949\n4,959,779\n5,587,835\n5,158,092\n5,449,376\n4,704,522\n5,179,362\n4,356,968\n5,531,613\n4,854,182\n5,231,031\n4,837,197\n4,772,244\n5,116,032\n5,045,172\n5,251,715\n4,799,308\n5,316,575\n4,921,836\n4,272,017\n5,086,907\n4,911,003\n4,828,021\n5,271,758\n4,917,847\n4,878,895\n5,136,811\n4,678,344\n5,274,497\n5,027,263\n5,425,186\n4,773,926\n5,121,029\n4,992,982\n4,389,186\n5,069,083\n4,759,595\n4,897,741\n5,416,758\n4,601,529\n4,856,759\n5,247,435\n4,904,126\n3,659,930\n5,452,863\n4,191,641\n4,599,084\n4,612,468\n4,531,820\n4,364,383\n4,610,652\n4,098,498\n4,237,842\n4,315,873\n4,202,221\n3,502,180\n4,078,139\n3,642,324\n3,738,350\n3,372,278\n3,577,580\n3,721,574\n3,218,006\n3,142,256\n2,913,750\n3,045,825\n2,752,707\n2,626,946\n2,582,839\n2,547,477\n2,745,427\n2,798,938\n2,554,868\n2,481,365\n2,615,636\n2,501,445\n2,215,845\n2,382,856\n2,322,582\n1,981,827\n2,452,992\n2,294,084\n2,198,239\n2,310,009\n2,281,908\n2,284,011\n2,157,971\n2,110,730\n1,885,173\n2,147,905\n2,006,166\n1,744,496\n2,101,238\n2,015,057\n1,987,479\n2,036,514\n1,941,389\n2,056,149\n2,041,451\n1,649,794\n1,462,483\n1,942,839\n1,781,332\n1,658,989\n1,830,978\n\n\nAmerica (Million Dollars)\n6267.4\n6901.5\n7529.4\n7666.4\n7995.9\n8633.8\n7879.7\n8024.0\n8521.1\n7822.1\n7176.1\n5385.2\n5850.9\n6261.1\n6127.4\n6027.6\n5631.6\n5750.1\n5728.6\n5457.4\n5191.8\n6195.9\n5303.5\n4164.2\n4580.0\n4676.4\n4588.2\n4869.7\n4886.4\n4132.0\n4667.3\n4686.2\n4259.0\n5183.5\n5910.8\n5314.1\n5844.1\n5686.4\n6274.7\n5754.5\n5633.1\n6128.8\n5986.2\n5876.4\n5797.3\n6128.0\n5528.7\n5381.1\n5543.6\n6184.6\n6013.9\n6409.9\n5466.5\n6031.7\n5590.7\n5961.2\n5661.3\n5122.6\n5316.7\n4113.3\n4706.6\n5014.4\n4895.6\n4983.1\n4435.1\n4888.7\n4684.4\n5147.3\n5372.0\n4481.4\n5262.9\n4097.8\n4743.8\n4645.3\n4908.6\n4145.9\n4121.3\n4754.1\n4107.4\n4396.5\n4284.6\n4251.0\n4437.5\n3813.2\n3818.0\n4515.7\n4773.8\n4711.8\n5147.4\n4484.8\n4468.0\n4886.9\n4418.3\n4725.5\n5555.1\n3842.0\n4751.9\n5546.4\n5087.7\n5927.0\n4999.0\n5276.0\n4755.4\n4635.5\n5276.7\n6046.6\n6117.0\n5579.0\n5570.0\n4,793.3\n5,269.7\n5,847.2\n6,441.8\n5,843.8\n6,344.8\n5,004.4\n5,550.9\n5,697.4\n4,717.4\n5,173.2\n5,553.4\n4,705.3\n4,806.6\n5,670.2\n5,248.5\n5,521\n5,556.7\n5,098.6\n5,876.5\n5,073.8\n5,539.4\n5,312.3\n5,349.6\n5,489.2\n6,298.3\n4,816.1\n5,093.9\n5,678.4\n4,871\n5,308.5\n5,658.1\n5,702.4\n5,382.1\n4,542.4\n4,964.5\n4,842.5\n5,033\n4,822.5\n4,760.2\n5,220.1\n5,044.1\n5,236.8\n4,845.9\n5,512.7\n5,475.1\n4,255.2\n4,687.7\n4,756.3\n4,653.1\n4,434\n4,687.6\n4,587.5\n4,335.4\n4,062\n3,907.3\n4,123.3\n4,114.8\n4,181.7\n4,362.4\n4,585\n4,657.5\n5,995.1\n5,589.1\n5,483.1\n5,484.8\n5,674.7\n5,361.7\n5,725.3\n5,562.2\n4,929.1\n4,800.5\n4,664.4\n4,818\n5,116.9\n4,379.3\n4,340\n4,627.6\n4,883.5\n4,602.7\n4,411.5\n5,232.8\n4,163.6\n4,170.7\n6,260.1\n5,104.3\n4,533.3\n4,380.4\n4,259.6\n4,401.5\n4,313\n4,209.1\n3,980.9\n4,154\n4,364.3\n3,499.5\n3,797.8\n3,875.5\n4,519.8\n3,816.1\n4,219.3\n3,622.7\n3,460\n3,393.4\n3,676.4\n3,624.7\n2,991.3\n2,744.1\n2,896.6\n2,789.2\n3,218.7\n3,145.2\n3,369.4\n4,304.7\n3,418.6\n3,350.4\n3,439.7\n3,753.7\n2,606.4\n2,554.4\n2,649.3\n2,624.1\n3,430\n3,061.2\n3,087.6\n2,670.2\n2,852.8\n2,460.4\n2,825.5\n3,455.3\n2,755.3\n2,385.2\n2,353\n2,615.5\n3,059.6\n2,327\n2,829.1\n2,744.2\n3,265\n2,628.2\n2,978.2\n2,714.8\n2,672.8\n2,481.5\n2,455.7\n2,829.2\n3,602.7\n2,817.7\n2,777.9\n3,077.8\n3,278.4\n2,919\n2,974.2\n3,434.9\n3,437.6\n3,263.5\n3,306.2\n3,129.6\n3,568.8\n3,537.4\n3,270.4\n3,440.7\n3,153.3\n2,874.4\n2,774.1\n3,293.9\n2,547\n2,596.4\n2,981.1\n3,170.6\n2,896.5\n3,014.3\n3,573.6\n2,704.7\n2,870.7\n2,775.4\n2,664.8\n2,952.3\n2,234.5\n2,958\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\n\n\nAsia (Million Dollars)\n30174.0\n33611.7\n34733.7\n36120.9\n37696.3\n40911.9\n43214.2\n42507.2\n40534.7\n38735.7\n42199.9\n31611.3\n35014.0\n39140.3\n35949.6\n33552.7\n32533.4\n31492.5\n31645.0\n31021.0\n28497.2\n30623.1\n31367.8\n26122.6\n27413.7\n28200.4\n25844.9\n26127.9\n27823.2\n26052.3\n26767.4\n24779.3\n21718.9\n24534.5\n26783.6\n26588.1\n27128.1\n27688.7\n27905.0\n28378.3\n26350.3\n26671.9\n28473.3\n26052.4\n27541.0\n26807.2\n26773.8\n22762.9\n27643.4\n27352.6\n29765.8\n31710.5\n27426.4\n28371.5\n29381.2\n26804.0\n28718.4\n26249.7\n26481.1\n23434.2\n26477.0\n27349.4\n28430.0\n27283.6\n25101.0\n26491.1\n24750.6\n24011.2\n26420.2\n23510.6\n27215.5\n22103.1\n25008.4\n26302.5\n25122.1\n23492.4\n23237.1\n23121.5\n22039.0\n23479.2\n22261.9\n21145.8\n21940.0\n20726.8\n20169.1\n23757.8\n22217.7\n23871.5\n24404.3\n24174.4\n25221.3\n24850.7\n22616.4\n24671.7\n23668.0\n19628.9\n23268.9\n24966.7\n23279.3\n26010.9\n27147.5\n24350.1\n28201.5\n26630.8\n28177.4\n28145.1\n28647.9\n24865.1\n27473.3\n26,194.8\n26,960.8\n29,434\n28,099.3\n26,865.3\n28,328.7\n26,388.3\n27,479.2\n27,552.5\n26,017.4\n23,175.7\n27,814.1\n26,030.8\n28,706\n27,659\n26,139.6\n25,790.8\n26,712.7\n28,764.9\n28,848.5\n27,714\n29,417.2\n28,344.3\n27,629\n25,534.4\n28,768.5\n27,327.1\n25,482.6\n29,680.5\n26,645.3\n27,103.5\n27,180.8\n25,992.4\n30,249.7\n21,631.9\n25,562.3\n24,935.7\n23,996.3\n24,418.9\n24,785.3\n24,992.2\n26,413.2\n26,406.9\n22,765.9\n25,090.5\n24,259.5\n21,219.2\n23,073.5\n22,487.1\n20,776.7\n22,080.2\n22,322.2\n19,972.8\n21,579.4\n19,884.7\n18,334\n18,269.8\n18,236.3\n17,144\n16,335.8\n19,514.2\n21,649.8\n26,393.9\n29,379.1\n26,991.5\n31,290.3\n27,963.8\n26,682.5\n27,528.7\n26,276\n23,240.2\n27,400.2\n24,856\n25,264.5\n25,697.5\n23,693.4\n23,975.4\n24,127.7\n23,352.4\n22,424\n22,114.8\n22,153.7\n19,277\n22,255.5\n21,897.9\n22,074.7\n21,440.3\n23,585.1\n24,903.8\n23,415.6\n24,201.2\n23,544.4\n20,782.2\n22,493\n21,273.8\n19,858.7\n21,922.2\n20,785.4\n22,398.4\n21,032.8\n20,528.6\n19,551.7\n20,004.7\n18,552.4\n18,830.9\n20,300\n15,041.3\n18,349.3\n18,286.4\n17,904.6\n19,014.6\n18,226.7\n17,940\n18,018.1\n17,472.4\n17,060.7\n15,897.4\n17,154.8\n13,995.8\n14,282.4\n15,920.4\n14,106.6\n15,274.3\n14,344.3\n13,199.8\n13,598.3\n13,564.9\n12,461.7\n12,841.7\n13,511.2\n11,197.3\n12,979.4\n11,348\n11,960.5\n12,574.3\n11,608.9\n11,990.5\n12,441.8\n12,118.3\n11,479.9\n12,145.2\n11,687.5\n9,607.6\n10,625.2\n10,344.1\n10,938.6\n11,310.6\n10,507.3\n11,285\n11,146.8\n11,237.7\n10,935.5\n11,443.2\n12,363.4\n11,353.3\n11,516.7\n14,222.4\n14,381\n14,362.3\n14,492.5\n14,115.7\n13,055.8\n13,690.6\n12,685.3\n11,993.5\n12,326.9\n10,354.7\n10,569\n11,843.6\n11,309.5\n11,154.8\n10,772.4\n10,074.6\n10,923.5\n10,216.6\n9,653.2\n9,991.1\n9,487.9\n7,499.7\n7,813.7\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\n\n\nEurope (Million Dollars)\n6427.8\n7541.8\n7242.8\n7475.9\n8167.6\n7433.2\n8300.5\n7300.2\n7030.8\n7407.2\n7203.2\n6479.0\n7821.6\n7586.3\n6872.0\n6714.8\n6882.1\n5919.4\n6919.2\n7011.2\n6563.5\n6740.5\n8964.0\n5403.7\n5749.6\n6087.4\n6133.5\n6285.4\n5316.9\n5225.0\n5475.3\n4960.7\n4629.0\n5150.6\n6333.3\n6209.6\n6859.7\n6314.8\n6827.1\n6624.7\n6310.1\n6533.8\n6325.3\n6054.8\n7987.4\n7157.0\n7128.7\n6730.3\n7489.3\n7742.8\n8032.7\n7805.9\n7542.6\n8218.9\n8694.4\n7126.1\n7181.7\n6237.3\n6963.0\n6061.9\n6318.0\n6809.7\n6876.0\n6292.9\n5484.9\n6491.4\n6169.1\n6428.7\n6434.0\n5985.2\n6570.9\n6067.0\n6105.0\n7658.1\n6535.5\n5667.2\n4809.6\n4920.3\n5153.8\n5302.1\n5624.9\n6051.1\n6250.8\n5365.3\n5450.5\n5918.4\n6080.4\n6404.1\n4818.9\n5765.3\n6870.3\n6040.6\n5765.4\n6603.1\n8133.0\n5199.5\n6054.5\n6627.2\n6444.4\n7811.7\n6998.1\n5962.7\n6782.3\n5703.1\n7038.5\n7411.0\n7700.1\n5447.2\n6463.7\n6,886.7\n6,065.7\n8,486.1\n6,238.1\n6,664.6\n7,708.3\n7,068.7\n7,676.5\n7,679.2\n6,399\n6,302.6\n6,531.6\n5,582.2\n5,702.9\n6,536.2\n5,552.8\n6,349.8\n5,869.5\n6,618.4\n7,496.7\n6,261.5\n7,704.4\n6,058.4\n6,675\n6,551.8\n5,991.1\n6,767.4\n7,664.2\n6,070.3\n5,184.6\n6,047.2\n6,271.8\n6,249.8\n6,845.6\n5,348.6\n6,309.2\n5,790.3\n6,205.1\n6,011.9\n5,466.6\n5,192.6\n6,252\n5,556.7\n5,374.8\n5,295.7\n5,764.4\n4,877.6\n4,815.7\n5,785.2\n5,179.1\n5,232.2\n5,583.9\n4,841.2\n5,041.3\n5,226.4\n4,834\n4,893.6\n4,626.8\n4,614.2\n4,384.9\n4,506.4\n5,779.6\n5,746.8\n5,732.3\n5,634.4\n5,627.3\n6,048.3\n5,651.5\n6,380\n6,028.6\n4,599.9\n5,601.7\n4,821.2\n5,249.4\n5,597\n4,255.6\n4,730.5\n4,761.7\n5,082.3\n4,663.9\n4,834.8\n4,666\n3,869.9\n3,820.9\n4,133.7\n4,152.9\n4,475.3\n4,122.9\n4,251\n4,530.7\n4,137.4\n4,245.7\n3,918.8\n4,276.9\n3,591.6\n3,559.3\n4,305.6\n3,774.7\n4,389.5\n3,807.4\n4,131.5\n4,055.9\n3,978.5\n3,545.2\n3,709.8\n3,575.2\n3,000.7\n3,254.6\n3,544.8\n3,658.5\n3,625\n3,444.2\n3,531.4\n3,661.4\n3,445.1\n3,477.3\n4,235.3\n3,794.5\n3,205\n3,803.3\n3,254.4\n2,932.6\n3,109.5\n2,778.8\n2,840.2\n3,074.3\n2,898.5\n2,727.9\n3,112.4\n2,860.6\n2,596.1\n2,657.6\n2,831.8\n2,579.4\n2,818.9\n2,439.5\n2,806.3\n2,926.2\n2,439.5\n2,706\n2,556.9\n2,591.2\n2,087.8\n2,219.7\n2,325.6\n2,359.2\n2,533.7\n2,309.5\n2,639.7\n2,803.8\n2,424.4\n2,698.9\n2,562.2\n2,803.4\n2,566.8\n2,473.3\n2,939.2\n2,964.8\n2,853.7\n2,780.9\n2,980.7\n2,875.4\n2,852.4\n2,724.1\n2,374.3\n2,719.1\n2,344\n2,314.3\n2,700.2\n2,477.1\n2,585.9\n2,306.3\n2,440.3\n2,798.7\n2,362.7\n2,301.9\n2,218.9\n2,525.5\n2,030.4\n1,998.6\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\n\n\nOceania (Million Dollars)\n983.3\n1399.9\n664.4\n1329.8\n1544.6\n935.9\n1060.6\n1141.8\n1164.7\n1559.1\n863.9\n814.4\n810.4\n744.8\n994.1\n1021.2\n599.8\n744.0\n1201.2\n890.1\n1001.7\n1030.5\n1131.0\n1134.7\n705.5\n540.9\n1412.8\n577.3\n477.7\n586.5\n493.1\n456.4\n441.8\n637.6\n845.9\n694.7\n819.7\n1369.3\n841.1\n941.8\n866.8\n1015.1\n815.3\n503.7\n889.4\n820.3\n518.9\n787.2\n614.4\n895.3\n875.7\n801.7\n686.2\n827.4\n773.2\n828.5\n793.2\n490.3\n651.5\n600.3\n591.8\n576.9\n992.2\n570.3\n462.7\n436.4\n1014.6\n486.0\n674.8\n409.0\n708.7\n402.9\n456.0\n524.8\n576.5\n471.9\n434.6\n433.7\n394.6\n588.5\n498.8\n545.2\n642.5\n665.9\n658.6\n513.8\n377.5\n869.1\n614.7\n595.3\n707.2\n554.5\n545.9\n794.3\n1145.2\n871.8\n778.3\n1027.5\n694.5\n1065.0\n1173.7\n865.4\n754.7\n844.3\n952.1\n755.7\n802.2\n907.8\n1280.1\n602.8\n496.1\n845\n704.2\n770.3\n763.5\n484.7\n810.2\n753.7\n709.2\n550.6\n386.7\n777.3\n713\n943.7\n767.3\n731.7\n620.8\n766.6\n443.9\n483.5\n876.3\n395.7\n415\n509.8\n705.5\n537\n591.9\n601.1\n469.8\n617.1\n523.3\n391.5\n441.2\n485.4\n620.3\n449.3\n450.7\n330.1\n439.4\n714.1\n628.5\n386.3\n430.9\n655.5\n629.4\n438.6\n590.1\n722.7\n643.8\n665.7\n495.9\n586.8\n614.6\n541.1\n668.1\n514.9\n649.6\n437\n552.2\n453.1\n601.7\n671.3\n751.9\n639.5\n763.3\n810.9\n793.6\n770.3\n575.1\n479.9\n751.6\n461.9\n530.8\n569.6\n374.5\n539\n500.9\n489.9\n509\n424.4\n446\n350.4\n430.7\n618\n459.9\n490\n535.3\n609\n627.1\n916.9\n484.9\n422.6\n457.8\n612.9\n373\n585.2\n604.9\n589.3\n499.9\n450.5\n488.6\n426.7\n549\n336.9\n511.7\n283.9\n358.8\n426.9\n432.2\n302.2\n451.8\n440.2\n450.9\n373.7\n383.1\n409.4\n324.2\n336.8\n291.4\n355.5\n335.4\n310.4\n370.8\n296.1\n307.1\n315\n357.5\n457.3\n471.3\n525.6\n427.8\n321.1\n463.6\n383.1\n506.7\n496.9\n398.5\n367.1\n475.5\n405.2\n460.7\n364.7\n517.1\n323.1\n284.6\n504.7\n322.3\n487.3\n291.4\n460.9\n441.2\n370.6\n404.3\n523.1\n268.6\n365.5\n460.1\n450.7\n408.5\n445.8\n359.2\n409.5\n314.6\n356.8\n276.1\n261.3\n275.9\n336.2\n268.6\n244.1\n259.3\n255.3\n200.5\n216.6\n235.5\n235.9\n215.1\n187.4\n190.8\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\n\n\nAfrica (Million Dollars)\n541.1\n414.9\n483.6\n589.9\n395.0\n551.2\n574.4\n675.9\n352.9\n591.9\n636.9\n668.5\n529.9\n616.8\n731.8\n628.8\n333.4\n808.4\n613.8\n660.2\n305.4\n579.6\n902.2\n818.5\n579.9\n649.4\n498.6\n313.5\n297.2\n476.5\n440.6\n238.2\n409.6\n372.6\n559.4\n666.1\n528.6\n521.4\n642.0\n583.2\n290.4\n648.6\n430.0\n492.6\n422.5\n382.4\n390.0\n413.0\n262.8\n391.1\n426.5\n399.1\n317.9\n352.6\n533.0\n334.9\n533.2\n282.7\n333.2\n399.8\n398.1\n353.8\n283.2\n217.2\n248.5\n395.2\n256.1\n343.4\n248.6\n155.9\n229.6\n361.8\n421.7\n342.6\n340.2\n152.3\n158.4\n298.4\n211.7\n301.6\n252.1\n244.8\n391.2\n378.8\n286.8\n163.0\n181.3\n141.6\n293.7\n240.7\n164.1\n282.2\n226.4\n175.9\n323.4\n189.0\n367.6\n207.1\n256.6\n345.7\n255.3\n431.1\n315.2\n403.1\n384.6\n440.9\n546.6\n415.0\n356.3\n208.9\n189.5\n259.1\n133.5\n333.3\n500.4\n294.8\n467.3\n375.5\n245.8\n152.9\n277.9\n164.2\n152.9\n222.8\n167.6\n235.9\n231.1\n392.5\n144.6\n153.9\n161.4\n107.4\n197.5\n124.8\n105.3\n144.4\n79\n178.9\n93.8\n109.2\n122.7\n182.4\n142.1\n118.3\n127.5\n97.2\n110.5\n91\n111.2\n89.7\n168.6\n87.8\n94.2\n165.5\n234.6\n114.1\n123.1\n134.6\n162.9\n156.1\n153.3\n173.4\n99.7\n84.9\n74.8\n66.5\n102.6\n111.2\n91.1\n100.2\n167.1\n150.5\n132.2\n177.5\n200\n195.6\n130.3\n151.2\n206.2\n165\n127.5\n132.2\n191.3\n129.1\n108.4\n138.7\n133.6\n268\n141.2\n159.8\n142\n190.7\n85.8\n207.4\n165.6\n129.9\n194.5\n140\n180.3\n209.8\n143.8\n222.5\n134.2\n95\n85.4\n157.8\n144.2\n178.3\n156.6\n309.3\n224.1\n133.5\n163.3\n104.1\n167.1\n83.7\n238.6\n144.6\n109.8\n278.2\n252.8\n94.6\n212.7\n135.7\n195.8\n122\n187.2\n191.4\n103.6\n190.4\n78.9\n122.9\n75.2\n110.6\n182.7\n142.3\n128.4\n88.1\n143.3\n88.4\n89.1\n167.2\n71.7\n79.8\n165.8\n101.8\n158\n100.3\n197.7\n94.2\n93.5\n83.8\n66.2\n75.5\n156.8\n121.7\n72.6\n80.3\n98.2\n107.9\n131.1\n141.4\n110.8\n71.8\n90.4\n151.3\n106.2\n164.5\n105.8\n104.9\n134.3\n175.3\n71.1\n65.9\n88.3\n50.3\n108.2\n67.2\n148.9\n77.3\n92\n163.8\n72.3\n72.1\n43.9\n144\n54.2\n45.6\n31.3\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\nna\n\n\n\n\n\n\n\n\n\n\n\nimports_transposed <- imports %>%\n  select(matches(\"Data|202[0-2]\")) %>%    # select columns containing \"Data\", \"2020\", \"2021\", or \"2022\"\n  t() %>%                                # transpose the data frame\n  row_to_names(row_number = 1) %>% \n  as.data.frame() %>%                    # convert to a data frame\n  tibble::rownames_to_column(\"timestamp\") %>%  # add a timestamp column using row names\n  mutate(timestamp = lubridate::ymd(paste0(timestamp, \"01\"))) %>%   # convert timestamp to date format\n  arrange(timestamp)                     # sort by timestamp in ascending order\n\n\nexports_transposed <- exports %>%\n  select(matches(\"Data|202[0-2]\")) %>%    # select columns containing \"Data\", \"2020\", \"2021\", or \"2022\"\n  t() %>%                                # transpose the data frame\n  row_to_names(row_number = 1) %>% \n  as.data.frame() %>%                    # convert to a data frame\n  tibble::rownames_to_column(\"timestamp\") %>%  # add a timestamp column using row names\n  mutate(timestamp = lubridate::ymd(paste0(timestamp, \"01\"))) %>%   # convert timestamp to date format\n  arrange(timestamp)                     # sort by timestamp in ascending order\n\n\nkable(head(imports_transposed))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntimestamp\nTotal Merchandise Imports (Thousand Dollars)\nAmerica (Million Dollars)\nAsia (Million Dollars)\nEurope (Million Dollars)\nOceania (Million Dollars)\nAfrica (Million Dollars)\nEuropean Union (Million Dollars)\nBelgium (Thousand Dollars)\nDenmark (Thousand Dollars)\nFrance (Thousand Dollars)\nGermany, Federal Republic Of (Thousand Dollars)\nGreece (Thousand Dollars)\nIreland (Thousand Dollars)\nItaly (Thousand Dollars)\nLuxembourg (Thousand Dollars)\nNetherlands (Thousand Dollars)\nUnited Kingdom (Thousand Dollars)\nPortugal (Thousand Dollars)\nSpain (Thousand Dollars)\nAustria (Thousand Dollars)\nFinland (Thousand Dollars)\nNorway (Thousand Dollars)\nSweden (Thousand Dollars)\nSwitzerland (Thousand Dollars)\nLiechtenstein (Thousand Dollars)\nMalta (Thousand Dollars)\nGermany, Democratic Republic Of (Thousand Dollars)\nHungary (Thousand Dollars)\nPoland (Thousand Dollars)\nEstonia (Thousand Dollars)\nLatvia (Thousand Dollars)\nLithuania (Thousand Dollars)\nSlovenia (Thousand Dollars)\nCzech Republic (Thousand Dollars)\nSlovak Republic (Slovakia) (Thousand Dollars)\nBrunei Darussalam (Thousand Dollars)\nIndonesia (Thousand Dollars)\nMalaysia (Thousand Dollars)\nPhilippines (Thousand Dollars)\nThailand (Thousand Dollars)\nMyanmar (Thousand Dollars)\nCambodia (Thousand Dollars)\nLaos People’s Democratic Republic (Thousand Dollars)\nVietnam, Socialist Republic Of (Thousand Dollars)\nJapan (Thousand Dollars)\nHong Kong (Thousand Dollars)\nRepublic Of Korea (Thousand Dollars)\nTaiwan (Thousand Dollars)\nMacau (Thousand Dollars)\nMainland China (Thousand Dollars)\nAfghanistan (Thousand Dollars)\nBangladesh (Thousand Dollars)\nIndia (Thousand Dollars)\nMaldives, Republic Of (Thousand Dollars)\nNepal (Thousand Dollars)\nPakistan (Thousand Dollars)\nSri Lanka (Thousand Dollars)\nBahrain (Thousand Dollars)\nCyprus (Thousand Dollars)\nIran (Islamic Republic Of) (Thousand Dollars)\nIsrael (Thousand Dollars)\nJordan (Thousand Dollars)\nKuwait (Thousand Dollars)\nLebanon (Thousand Dollars)\nOman (Thousand Dollars)\nQatar (Thousand Dollars)\nSaudi Arabia (Thousand Dollars)\nSyrian Arab Republic (Thousand Dollars)\nUnited Arab Emirates (Thousand Dollars)\nYemen (Thousand Dollars)\nYemen Democratic (Thousand Dollars)\nCanada (Thousand Dollars)\nPuerto Rico (Thousand Dollars)\nUnited States (Thousand Dollars)\nArgentina (Thousand Dollars)\nBrazil (Thousand Dollars)\nChile (Thousand Dollars)\nColombia (Thousand Dollars)\nEcuador (Thousand Dollars)\nMexico (Thousand Dollars)\nParaguay (Thousand Dollars)\nPeru (Thousand Dollars)\nUruguay (Thousand Dollars)\nVenezuela (Thousand Dollars)\nNetherlands Antilles (Thousand Dollars)\nPanama (Thousand Dollars)\nBahamas (Thousand Dollars)\nBermuda (Thousand Dollars)\nFrench Guiana (Thousand Dollars)\nGrenada (Thousand Dollars)\nGuatemala (Thousand Dollars)\nHonduras (Thousand Dollars)\nJamaica (Thousand Dollars)\nSt Vincent & The Grenadines (Thousand Dollars)\nTrinidad & Tobago (Thousand Dollars)\nAnguilla (Thousand Dollars)\nOther Countries In America (Thousand Dollars)\nAustralia (Thousand Dollars)\nFiji (Thousand Dollars)\nNauru (Thousand Dollars)\nNew Caledonia (Thousand Dollars)\nNew Zealand (Thousand Dollars)\nPapua New Guinea (Thousand Dollars)\nCocos (Keeling) Islands (Thousand Dollars)\nFrench Southern Territories (Thousand Dollars)\nNorfolk Island (Thousand Dollars)\nCook Islands (Thousand Dollars)\nFrench Polynesia (Thousand Dollars)\nGuam (Thousand Dollars)\nKiribati (Thousand Dollars)\nNiue (Thousand Dollars)\nSolomon Islands (Thousand Dollars)\nTuvalu (Thousand Dollars)\nWallis & Fatuna Islands (Thousand Dollars)\nMicronesia (Thousand Dollars)\nPalau (Thousand Dollars)\nSouth Sudan (Thousand Dollars)\nOther Countries In Oceania (Thousand Dollars)\nCommonwealth Of Independent States (Thousand Dollars)\n\n\n\n\n2020-01-01\n41180224.0\n5844.1\n27128.1\n6859.7\n819.7\n528.6\n4370.9\n124193.0\n84860.0\n1491370.0\n1127285.0\n10275.0\n87483.0\n512050.0\n9204.0\n283975.0\n1104098.0\n43064.0\n122480.0\n80100.0\n29925.0\n58705.0\n118465.0\n970886.0\n2822.0\n42930.0\n0.0\n24246.0\n50706.0\n4433.0\n1331.0\n22159.0\n4095.0\n61739.0\n9510.0\n278270.0\n1736989.0\n4979254.0\n730334.0\n1119938.0\n16270.0\n17055.0\n525.0\n381987.0\n2138871.0\n391417.0\n2078134.0\n3571356.0\n1000.0\n5469816.0\n7.0\n51163.0\n818894.0\n89.0\n1957.0\n7491.0\n8913.0\n654.0\n1040.0\n335.0\n63270.0\n2477.0\n402328.0\n176.0\n57540.0\n699137.0\n669964.0\n4.0\n816041.0\n70.0\n0.0\n568765.0\n8214.0\n4497881.0\n6161.0\n404695.0\n7693.0\n33246.0\n2066.0\n276701.0\n96.0\n3375.0\n1205.0\n1266.0\n32.0\n691.0\n0.0\n81.0\n7.0\n5.0\n1663.0\n249.0\n94.0\n3.0\n26.0\n3.0\n29935.0\n695463.0\n265.0\n4.0\n30.0\n121022.0\n1883.0\n113.0\n0.0\n89.0\n6.0\n64.0\n33.0\n0.0\n0.0\n0.0\n0.0\n8.0\n0.0\n0.0\n1443.0\n2103.0\n354678.0\n\n\n2020-02-01\n39472637.0\n5314.1\n26588.1\n6209.6\n694.7\n666.1\n3933.2\n176921.0\n124343.0\n1123010.0\n1003380.0\n12065.0\n106456.0\n493798.0\n2715.0\n231398.0\n1321706.0\n25936.0\n130066.0\n73180.0\n34683.0\n71122.0\n98183.0\n724391.0\n2869.0\n14917.0\n0.0\n25341.0\n58527.0\n4914.0\n885.0\n7184.0\n3840.0\n61038.0\n8328.0\n242796.0\n2180859.0\n4985932.0\n759531.0\n1371864.0\n14314.0\n196936.0\n1263.0\n570763.0\n2427079.0\n226736.0\n1927140.0\n3647659.0\n2437.0\n3978903.0\n66.0\n19551.0\n601098.0\n109.0\n271.0\n7837.0\n9415.0\n1087.0\n1217.0\n714.0\n100408.0\n3582.0\n180975.0\n192.0\n13579.0\n1012134.0\n673261.0\n0.0\n1134202.0\n145.0\n0.0\n200223.0\n9634.0\n4398257.0\n3057.0\n331188.0\n7339.0\n886.0\n2353.0\n240158.0\n132.0\n2485.0\n543.0\n135.0\n43018.0\n366.0\n37085.0\n0.0\n0.0\n0.0\n8087.0\n179.0\n23.0\n1.0\n27.0\n0.0\n29091.0\n500418.0\n119.0\n94.0\n63.0\n71785.0\n121520.0\n0.0\n0.0\n87.0\n1.0\n42.0\n23.0\n0.0\n0.0\n1.0\n0.0\n0.0\n2.0\n1.0\n0.0\n848.0\n152797.0\n\n\n2020-03-01\n40433029.0\n5910.8\n26783.6\n6333.3\n845.9\n559.4\n4178.2\n136150.0\n54577.0\n1233320.0\n1115034.0\n12418.0\n100595.0\n511874.0\n5787.0\n296540.0\n1136172.0\n23454.0\n130455.0\n74845.0\n45871.0\n69037.0\n220796.0\n832311.0\n2430.0\n20391.0\n0.0\n35228.0\n53397.0\n4441.0\n1861.0\n8567.0\n6647.0\n54120.0\n11601.0\n70923.0\n2093275.0\n4295365.0\n758664.0\n1087792.0\n32206.0\n162348.0\n1134.0\n563463.0\n2606394.0\n364163.0\n2006546.0\n3852722.0\n486.0\n5979894.0\n6.0\n27294.0\n703494.0\n28.0\n347.0\n7095.0\n6493.0\n2924.0\n766.0\n832.0\n79818.0\n3326.0\n118280.0\n191.0\n26038.0\n655950.0\n435911.0\n1.0\n635944.0\n240.0\n0.0\n228461.0\n19178.0\n5001588.0\n16477.0\n310852.0\n6774.0\n4391.0\n4232.0\n266785.0\n190.0\n1935.0\n1136.0\n91.0\n30.0\n241.0\n8.0\n0.0\n0.0\n4.0\n8961.0\n260.0\n16.0\n4.0\n77.0\n1.0\n39133.0\n743553.0\n549.0\n33.0\n5.0\n100199.0\n1323.0\n1.0\n0.0\n0.0\n4.0\n176.0\n23.0\n0.0\n0.0\n5.0\n0.0\n0.0\n1.0\n0.0\n0.0\n346.0\n112905.0\n\n\n2020-04-01\n35878828.0\n5183.5\n24534.5\n5150.6\n637.6\n372.6\n3662.7\n126970.0\n62488.0\n912836.0\n1160767.0\n15506.0\n116897.0\n347814.0\n44095.0\n269347.0\n849831.0\n33372.0\n83269.0\n95240.0\n34650.0\n50807.0\n129160.0\n482705.0\n3329.0\n23609.0\n0.0\n30516.0\n49027.0\n2888.0\n1425.0\n9946.0\n5607.0\n71541.0\n12895.0\n96185.0\n1735603.0\n3387367.0\n600246.0\n1983188.0\n9852.0\n77181.0\n409.0\n832510.0\n2168406.0\n302865.0\n1815269.0\n3910062.0\n1222.0\n5583246.0\n16.0\n3979.0\n276158.0\n0.0\n70.0\n4851.0\n8402.0\n26190.0\n1092.0\n1324.0\n48218.0\n1144.0\n75654.0\n91.0\n5321.0\n394261.0\n432733.0\n0.0\n526619.0\n87.0\n0.0\n248425.0\n13656.0\n4408653.0\n6489.0\n237606.0\n4545.0\n2934.0\n1581.0\n225541.0\n4.0\n2908.0\n1991.0\n27.0\n18.0\n1549.0\n31.0\n0.0\n10.0\n17.0\n447.0\n252.0\n31.0\n0.0\n52.0\n2.0\n26879.0\n480764.0\n106.0\n0.0\n0.0\n70052.0\n86087.0\n4.0\n20.0\n0.0\n1.0\n6.0\n5.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n2366.0\n99266.0\n\n\n2020-05-01\n31458238.0\n4259.0\n21718.9\n4629.0\n441.8\n409.6\n2910.1\n77945.0\n65305.0\n690063.0\n892172.0\n11181.0\n93891.0\n295412.0\n3436.0\n255200.0\n1104023.0\n28262.0\n111422.0\n55455.0\n31694.0\n66717.0\n116142.0\n446190.0\n2349.0\n15044.0\n0.0\n21876.0\n35833.0\n1931.0\n1185.0\n10014.0\n8059.0\n60816.0\n7101.0\n49763.0\n1226045.0\n4002175.0\n733533.0\n995812.0\n7736.0\n661600.0\n311.0\n337519.0\n1785072.0\n170672.0\n1285241.0\n3711610.0\n592.0\n4843684.0\n15.0\n3725.0\n436296.0\n0.0\n5.0\n3489.0\n9588.0\n12630.0\n3772.0\n293.0\n60180.0\n1171.0\n159144.0\n214.0\n2214.0\n263401.0\n425003.0\n0.0\n453294.0\n306.0\n0.0\n148801.0\n8257.0\n3554966.0\n5059.0\n288817.0\n4981.0\n8573.0\n1565.0\n213546.0\n47.0\n981.0\n1334.0\n87.0\n26.0\n1300.0\n1.0\n0.0\n9.0\n0.0\n1487.0\n277.0\n74.0\n0.0\n41.0\n3.0\n19064.0\n328456.0\n30.0\n0.0\n4.0\n91166.0\n21622.0\n39.0\n0.0\n0.0\n0.0\n16.0\n28.0\n0.0\n0.0\n1.0\n0.0\n0.0\n2.0\n0.0\n0.0\n714.0\n95398.0\n\n\n2020-06-01\n35120892.0\n4686.2\n24779.3\n4960.7\n456.4\n238.2\n3422.9\n73457.0\n41203.0\n895505.0\n978806.0\n11839.0\n111688.0\n442728.0\n23619.0\n273072.0\n739542.0\n40270.0\n90908.0\n62225.0\n40693.0\n94930.0\n125208.0\n560427.0\n1402.0\n26047.0\n0.0\n29820.0\n40937.0\n4345.0\n2004.0\n10000.0\n4166.0\n69463.0\n6745.0\n36456.0\n1337827.0\n5247898.0\n889759.0\n801372.0\n8355.0\n617967.0\n13475.0\n312667.0\n1754589.0\n536137.0\n1506803.0\n4333513.0\n449.0\n5288235.0\n72.0\n12128.0\n695070.0\n1.0\n39.0\n3077.0\n5687.0\n41364.0\n2825.0\n655.0\n70446.0\n1829.0\n29340.0\n145.0\n2561.0\n292131.0\n405429.0\n1.0\n318246.0\n557.0\n0.0\n178313.0\n7998.0\n3825437.0\n4426.0\n418057.0\n6004.0\n1468.0\n2190.0\n221919.0\n169.0\n1455.0\n1849.0\n34.0\n49.0\n162.0\n20.0\n0.0\n38.0\n14.0\n1020.0\n194.0\n110.0\n0.0\n609.0\n1.0\n15341.0\n330132.0\n118.0\n0.0\n187.0\n73899.0\n51298.0\n34.0\n37.0\n89.0\n0.0\n7.0\n9.0\n0.0\n0.0\n0.0\n29.0\n0.0\n0.0\n0.0\n0.0\n1257.0\n138743.0\n\n\n\n\n\nIn this session, we worked with a dataset of import data and used R to clean and manipulate it for visualization. We started by reading in the data and then selected a subset of columns containing the years 2020-2022 using the select() function from the dplyr package. Next, we transposed the resulting dataframe using the t() function, and set the row names to the first row using the row_to_names() function from the janitor package. We then converted the row names to a “timestamp” column using the rownames_to_column() function from the tibble package, and used mutate() to convert the “timestamp” column to a standard date format and sort the dataframe by date. Finally, we saved the cleaned and formatted dataframe for visualization.\n\n\n\n\nimports_filtered <- imports %>% # Select columns that contain \"Data\" or \"2020\", \"2021\", or \"2022\"\n  select(matches(\"Data|202[0-2]\"))\n\nimports_pivot <- imports_filtered %>% # Reshape the data by converting columns to rows\n  pivot_longer(\n    cols = !\"Data Series\", # Exclude the \"Data Series\" column from reshaping\n    names_to = \"timestamp\", # Set the column containing the old column names as \"timestamp\" in the new long format\n    values_to = \"value\" # Set the values in the old columns as \"value\" in the new long format\n  ) %>%\n  mutate(timestamp = lubridate::ymd(paste0(timestamp, \"01\"))) %>% # Convert \"timestamp\" column to a standard date format\n  arrange(timestamp) # Sort the data frame by \"timestamp\" column in ascending order\n\n\nexports_filtered <- exports %>% # Select columns that contain \"Data\" or \"2020\", \"2021\", or \"2022\"\n  select(matches(\"Data|202[0-2]\"))\n\nexports_pivot <- imports_filtered %>% # Reshape the data by converting columns to rows\n  pivot_longer(\n    cols = !\"Data Series\", # Exclude the \"Data Series\" column from reshaping\n    names_to = \"timestamp\", # Set the column containing the old column names as \"timestamp\" in the new long format\n    values_to = \"value\" # Set the values in the old columns as \"value\" in the new long format\n  ) %>%\n  mutate(timestamp = lubridate::ymd(paste0(timestamp, \"01\"))) %>% # Convert \"timestamp\" column to a standard date format\n  arrange(timestamp) # Sort the data frame by \"timestamp\" column in ascending order\n\n\nkable(head(exports_pivot))\n\n\n\n\nData Series\ntimestamp\nvalue\n\n\n\n\nTotal Merchandise Imports (Thousand Dollars)\n2020-01-01\n41180224.0\n\n\nAmerica (Million Dollars)\n2020-01-01\n5844.1\n\n\nAsia (Million Dollars)\n2020-01-01\n27128.1\n\n\nEurope (Million Dollars)\n2020-01-01\n6859.7\n\n\nOceania (Million Dollars)\n2020-01-01\n819.7\n\n\nAfrica (Million Dollars)\n2020-01-01\n528.6\n\n\n\n\n\nThe code is filtering and pivoting data. Firstly, it selects columns from the imports data frame that contain either “Data” or “2020”, “2021”, or “2022” using the select() function from the dplyr package. Then, it pivots the data frame into long format using the pivot_longer() function from the same package, specifying the columns to pivot using the cols argument and the names for the new columns using the names_to argument. After that, it converts the values in the timestamp column to date format using the ymd() function from the lubridate package and the mutate() function from dplyr. Finally, it sorts the resulting data frame by the timestamp column using the arrange() function."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#data-analysis-and-visualizations",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#data-analysis-and-visualizations",
    "title": "Take-home Exercise 4",
    "section": "2.0 Data Analysis and Visualizations",
    "text": "2.0 Data Analysis and Visualizations\n\n2.1 Horizon Plot: Average Import Prices from Different Countries (Jan 2020 to Dec 2022)\n\nimports_pivot %>% \n  ggplot() +\n  geom_horizon(aes(x = timestamp, y=value), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Data Series`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Import Prices from Different Countries (Jan 2020 to Dec 2022)')\n\n\n\n\n\n\n2.2 Total Import and Export by Continents\n\nplot_ly(imports_transposed, x = ~timestamp, y = ~`Asia (Million Dollars)`, \n        type = \"scatter\", mode = \"lines\", name=\"Asia\", \n        hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`Europe (Million Dollars)`, \n            name=\"EU\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`America (Million Dollars)`, \n            name=\"America\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`Oceania (Million Dollars)`, \n            name=\"Oceania\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`Africa (Million Dollars)`, \n            name=\"Africa\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  layout(title = \"Total Imports by Continents over Time\",\n         xaxis = list(title = \"Date\",\n                      tickformat = \"%Y-%m\",\n                      tickmode = \"auto\",\n                      nticks = 10),\n         yaxis = list(title = \"Total Imports (Millons)\"))\n\n\n\n\n\n\nplot_ly(exports_transposed, x = ~timestamp, y = ~`Asia (Million Dollars)`, \n        type = \"scatter\", mode = \"lines\", name=\"Asia\", \n        hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`Europe (Million Dollars)`, \n            name=\"EU\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`America (Million Dollars)`, \n            name=\"America\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`Oceania (Million Dollars)`, \n            name=\"Oceania\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  add_lines(x=~timestamp, y=~`Africa (Million Dollars)`, \n            name=\"Africa\", hovertemplate = \"%{x}, %{y:.2f} Millon\") %>%\n  layout(title = \"Total Exports by Continents over Time\",\n         xaxis = list(title = \"Date\",\n                      tickformat = \"%Y-%m\",\n                      tickmode = \"auto\",\n                      nticks = 10),\n         yaxis = list(title = \"Total Exports (Millons)\"))\n\n\n\n\n\nInsights: Asia has the highest amounts of both imports and exports. In addition, Singapore exports more to America than it imports. The export lines are relatively stable, while the import lines show more fluctuations."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#key-takeaways",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html#key-takeaways",
    "title": "Take-home Exercise 4",
    "section": "3.0 Key Takeaways",
    "text": "3.0 Key Takeaways\nOne key takeaway from these points is that data manipulation and visualization are important skills for working with data, and learning how to pivot and transpose tables, convert values to date time format, and use horizon plots can be useful in analyzing and presenting data effectively."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "This take-home exercise requires the use of appropriate analytical visualization techniques to identify significant patterns in the resale prices of public housing property in Singapore by residential towns and estates. The focus should be on 3-ROOM, 4-ROOM, and 5-ROOM housing types, and the study period should be on 2022. Students are encouraged to use interactive techniques to enhance user and data discovery experiences.\n\n\n\npacman::p_load(dplyr, tidyverse, DT, ggplot2, ggiraph, \n               ggstatsplot, patchwork, plotly, gganimate, \n               ggthemes, corrplot, heatmaply,lubridate,scales,ggrepel,ggpubr)\n\n1.2 Reading Dataset\n\nresale_data <- read_csv(\"Data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\nDT::datatable(head(resale_data,20)) \n\n\n\n\n\n\nhe month column is in the format “YYYY-MM”, we can convert it to a date format using:\n\nresale_data <- resale_data %>% \n  mutate(month = as.Date(paste0(month, \"-01\"), format = \"%Y-%m-%d\"))\n\nThis code adds “-01” to the end of each value in the month column to create a complete date string in the format “YYYY-MM-DD”, and then converts the resulting string to a date format using the as.Date function with the “%Y-%m-%d” format string.\n\nresale_345room_2022 <- resale_data %>% \n  filter(flat_type %in% c(\"3 ROOM\", \"4 ROOM\", \"5 ROOM\"), \n         year(month) == 2022) %>%\n  mutate(\"unit_price_sqm\" = resale_price/floor_area_sqm)\n\nIn this case, we use the same %in% operator as before to filter out rows where the flat_type column is either “3 ROOM”, “4 ROOM” or “5 ROOM”. Additionally, we use the as.Date function to convert the month column to a date format, and then use the year function to extract the year from the dates. We then use the logical operator == to specify that we only want rows where the year is equal to 2022.\n\nDT::datatable(head(resale_345room_2022))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#data-analysis-and-visualizations",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#data-analysis-and-visualizations",
    "title": "Take-home Exercise 3",
    "section": "2.0 Data Analysis and Visualizations",
    "text": "2.0 Data Analysis and Visualizations\n\n2.1 Average Resale Price Trend by Flat Type\n\n# Group data by flat type\nresale_345room_2022_grouped <- resale_345room_2022 %>%\n  group_by(flat_type, month) %>%\n  summarise(resale_price = mean(resale_price)/1000)\n\n# Plot monthly trend by flat type\nggplot(resale_345room_2022_grouped, aes(x = month, y = resale_price, color = flat_type)) +\n  geom_line() +\n  scale_x_date(date_labels = \"%b\", date_breaks = \"1 months\") +\n  labs(x = \"Month\", y = \"Resale Price (SGD, thousands)\", color = \"Flat Type\",title = \"Monthly Resale Price Trend by Flat Type (2022)\") +\n  theme_bw()\n\n\n\n\nAnalytic insights: This line chart displays the average resale price trends for three different types of public housing flats in Singapore (3-ROOM, 4-ROOM, and 5-ROOM) during the year 2022. The chart indicates that 3-ROOM flats generally had the lowest average resale prices, while 5-ROOM flats had the highest. All three types of flats experienced an upward trend in average resale prices throughout the year, with some fluctuations.\n\n\n2.2 Average Unit Price Per Sqm Trend by Flat Type\n\n# Group the data by flat type and month, and calculate the average unit resale price\nresale_avg <- resale_345room_2022 %>%\n  group_by(flat_type, month) %>%\n  summarise(avg_resale_price = mean(resale_price)/mean(floor_area_sqm))\n\n# Plot the line chart with dynamic tooltips using ggplot and plotly\np <- ggplot(resale_avg, aes(x = month, y = avg_resale_price, color = flat_type, group = flat_type)) +\n  geom_line() +\n  scale_x_date(date_labels = \"%b\", date_breaks = \"1 months\") +\n  scale_y_continuous(labels = function(x) paste0(x/1000, \"k\")) +\n  labs(x = \"Month\", y = \"Unit Price\", title = \"Average Unit Resale Price Trend by Flat Type (2022)\") +\n  theme_bw()\n\nggplotly(p, tooltip = c(\"month\", \"avg_resale_price\"))\n\n\n\n\n\nAnalytic insights: The line chart of the unit price per square meter of public housing in Singapore shows that there is a clear upward trend for all three flat types (3-room, 4-room, and 5-room) from January to September 2022. The average unit price for 4-room flats is the highest among the three types, followed by 3-room and 5-room flats. Additionally, there is a significant increase in unit price from August to October for all three flat types. These insights suggest that the public housing market in Singapore is experiencing a general upward trend in unit price, with larger flats commanding a lower unit price.\n\n\n2.3 Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- resale_345room_2022 %>%\n  group_by(flat_type) %>%\n  summarise(\n    n=n(),\n    mean=mean(unit_price_sqm),\n    sd=sd(unit_price_sqm)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=flat_type, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=flat_type, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          unit price by flat type\")\n\n\n\n\n\n\n2.4 The Distribution of Lease Commence Date for 3-Room (2022)\n\nresale_3room <- resale_345room_2022  %>% \n  filter(flat_type == \"3 ROOM\")\n         \ngghistostats(\n  data = resale_3room ,\n  x = lease_commence_date,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"lease commence date\",\n  title=\"The Distribution of Lease Commence Date for 3-Room (2022)\",\n)\n\n\n\n\n\nresale_4room <- resale_345room_2022  %>% \n  filter(flat_type == \"4 ROOM\")\n         \ngghistostats(\n  data = resale_4room ,\n  x = lease_commence_date,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"lease commence date\",\n  title=\"The Distribution of Lease Commence Date for 4-Room (2022)\",\n)\n\n\n\n\n\nresale_5room <- resale_345room_2022  %>% \n  filter(flat_type == \"5 ROOM\")\n         \ngghistostats(\n  data = resale_5room ,\n  x = lease_commence_date,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"lease commence date\",\n  title=\"The Distribution of Lease Commence Date for 5-Room (2022)\",\n)\n\n\n\n\nAnalytic insights: When analyzing the distribution of lease commencement dates for 3 room, 4 room, and 5 room HDB units, it was found that the majority of three-room second-hand HDB units had leases that commenced between 1970 and 1986, with the highest number of units having leases that commenced in 1984. The number of second-hand HDB units with leases commencing between 1986 and 2010 was very low. The lease commencement dates for second-hand 4 room and 5 room HDB units were relatively stable from 1970 to 2010 and began to increase in 2021, reaching a peak in 2018. However, due to the COVID-19 pandemic, this number dropped sharply, which also reflects the decline in HDB construction during the pandemic.\n\n\n2.5 One-way ANOVA test on Unit Price / sqm by Flat Type\n\np <- ggbetweenstats(\n  data = resale_345room_2022,\n  x = flat_type, \n  y = unit_price_sqm,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\np + labs(title = \"One-way ANOVA test on Unit Price / sqm by Flat Type\", \n         y = \"Unit Price / sqm\",\n         x = \"Flat Type\")\n\n\n\n\nInsights: This plot shows the results of a one-way ANOVA test on the unit price per square meter by flat type using the resale dataset. The x-axis shows the flat type, and the y-axis shows the unit price per square meter. The plot provides information about the mean and confidence intervals of the unit price per square meter for each flat type. The blue lines connecting the mean values show the significant pairwise comparisons between flat types, with the label indicating which flat types are significantly different from each other. The plot suggests that the unit price per square meter is significantly different among the different flat types, with 4-room and 5-room flats having the highest unit prices, followed by 3-room flats. This information can be used by potential buyers and sellers of HDB flats to gain insights into the current market trends and make informed decisions.\n\n\n2.6 Resale Price by Town and Flat Type\n\nggplot(resale_345room_2022, aes(x=town, y=resale_price/1000, fill=flat_type)) + \n  geom_boxplot() + \n  xlab(\"Town\") + \n  ylab(\"Resale Price (in '000s')\") + \n  scale_fill_manual(values=c(\"blue\", \"red\", \"green\", \"orange\", \"purple\", \"pink\")) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), \n        plot.margin = unit(c(1, 5, 1, 1), \"cm\"), \n        axis.title.x = element_text(size = 18), \n        axis.title.y = element_text(size = 18),\n        legend.title = element_blank(),\n        legend.text = element_text(size = 18)) +\n  labs(title = \"Resale Price by Town and Flat Type\") +\n  scale_y_continuous(labels = function(x) paste0(x, \"k\")) +\n  coord_cartesian(clip = \"off\", ylim = c(0, 1400)) +\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n        axis.text.y = element_text(size = 18),\n        legend.position = \"bottom\",\n        legend.box = \"horizontal\",\n        legend.margin = margin(t = 0, r = 0, b = 0, l = 0)\n        ) \n\n\n\n\nInsights: The chart shows the distribution of resale flat prices across different towns in Singapore, separated by flat type.\nThe first thing we can observe is that resale prices are generally higher for larger flats, as expected. The prices of 5-room and executive flats are consistently higher across all towns than 3-room and 4-room flats.\nWe can also see that the range of prices varies widely across different towns, even for the same flat type. For example, in the town of Bukit Merah, the resale price for a 3-room flat ranges from about SGD 200,000 to over SGD 700,000, while in Jurong West, the price range is from about SGD 100,000 to just over SGD 500,000. This suggests that location is an important factor in determining resale flat prices.\nFinally, we can observe that there are some towns where a particular flat type is more dominant than others. For example, in Woodlands, 4-room flats make up the majority of the resale market, while in Marine Parade, executive flats are the most common. This could be useful information for people who are looking to buy or sell a resale flat in a particular town."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#conclusions-and-takeaways",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_EX03.html#conclusions-and-takeaways",
    "title": "Take-home Exercise 3",
    "section": "3.0 Conclusions and Takeaways",
    "text": "3.0 Conclusions and Takeaways\n\nConclusions\nThe dataset on resale flat prices in Singapore provides valuable insights on the factors that influence the market. The box plot chart revealed that flat type and location play a significant role in determining resale prices. Larger flats, such as 5-room and executive flats, are consistently more expensive than 3-room and 4-room flats. Moreover, the resale price range varies widely across different towns, highlighting the importance of location in determining flat prices. The data also shows that the dominance of a particular flat type varies from town to town. The analysis of lease commence dates for second-hand flats further reveals interesting trends. There was a noticeable rise in the lease commence dates for 4 and 5 room flats in 2021, with a sharp decline during the COVID-19 pandemic. This indicates a decline in the construction of new homes during the pandemic. Overall, these insights are useful for buyers and sellers looking to make informed decisions in the Singapore resale flat market.\n\n\nKey Takeaways\n\nFilters and aggregation are important tools for analyzing and summarizing data frames.\nBox plots can be used to visualize the distribution of data and highlight the range of uncertain values."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "1.0 Overview\nThis take-home exercise is done based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2.\n\n\n2.0 Data Preparation\nIn this step, we will load the libraries and dataset\n\n# install and load libraries \npackages = c('tidyverse', 'knitr', 'ggdist', 'scales', 'grid', 'gridExtra',\n             'formattable', 'patchwork', 'plotly')\nfor(p in packages){\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\ndf <- read_csv('data/respopagesextod2022.csv')\n\n\nlibrary(rmarkdown)\npaged_table(df)\n\n\n\n  \n\n\n\n\n\n3.0 Visualization Remake Using R\n\n3.1 Critique\n\n\n\n\n\n\nClarity\n\nThe X-axis is very unclear, it has 2 rows at the bottom. the first row is number, audience could get confused since it could represent population or area. The last row is male and female, it could be simplly represented using the color legend to reduce the duplicates.\nThe number label on the bar chart is also meaningless, some bar have but some bar don’t have. Audience also won’t waste time distinguish them, they could simply find the longest bar and hover on it to view the tooltip.\nThe graph does not have data source caption.\n\nAesthetics\n\nThe graph follows the overall format of pyramid in trellis display, however looks very messy.\nThe Y-axis looks very crowded, it’s very hard for audience to map the bar charts with the Y label.\nThe font size of title is too small, audience is hard to capture the title information.\nThe margin space between rows is too big, it wasted too much space for the site name.\n\n\n\n\n3.2 Step by Step Plot Remake Using R\n\n3.2.1 Exploration using ggplot()\n\nggplot(df, aes (x = AG, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip()\n\n\n\n\n\n\n3.2.2 Data Wrangling\nTransforming the data to one gender.\n\nPopdata_males <- df %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Pop = -Pop)\nglimpse(Popdata_males)\n\nRows: 50,464\nColumns: 7\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ AG   <chr> \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to…\n$ Sex  <chr> \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"M…\n$ TOD  <chr> \"HDB 1- and 2-Room Flats\", \"HDB 3-Room Flats\", \"HDB 4-Room Flats\"…\n$ Pop  <dbl> 0, -10, -10, -30, 0, -50, 0, 0, 0, -10, -10, -30, 0, -80, 0, 0, 0…\n$ Time <dbl> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022,…\n\n\n\nPopdata_females <-df %>%\n  filter(`Sex` ==  \"Females\") \nPopdata_T <- rbind(Popdata_males,Popdata_females)\npaged_table(Popdata_T)\n\n\n\n  \n\n\n\n\n\n3.2.3 Initial Pyramid Plot\n\nggplot(Popdata_T, aes (x = AG, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip()\n\n\n\n\n\n\n3.2.4 Planning Areas\n\nprint(unique(Popdata_T$PA))\n\n [1] \"Ang Mo Kio\"              \"Bedok\"                  \n [3] \"Bishan\"                  \"Boon Lay\"               \n [5] \"Bukit Batok\"             \"Bukit Merah\"            \n [7] \"Bukit Panjang\"           \"Bukit Timah\"            \n [9] \"Central Water Catchment\" \"Changi\"                 \n[11] \"Changi Bay\"              \"Choa Chu Kang\"          \n[13] \"Clementi\"                \"Downtown Core\"          \n[15] \"Geylang\"                 \"Hougang\"                \n[17] \"Jurong East\"             \"Jurong West\"            \n[19] \"Kallang\"                 \"Lim Chu Kang\"           \n[21] \"Mandai\"                  \"Marina East\"            \n[23] \"Marina South\"            \"Marine Parade\"          \n[25] \"Museum\"                  \"Newton\"                 \n[27] \"North-Eastern Islands\"   \"Novena\"                 \n[29] \"Orchard\"                 \"Outram\"                 \n[31] \"Pasir Ris\"               \"Paya Lebar\"             \n[33] \"Pioneer\"                 \"Punggol\"                \n[35] \"Queenstown\"              \"River Valley\"           \n[37] \"Rochor\"                  \"Seletar\"                \n[39] \"Sembawang\"               \"Sengkang\"               \n[41] \"Serangoon\"               \"Simpang\"                \n[43] \"Singapore River\"         \"Southern Islands\"       \n[45] \"Straits View\"            \"Sungei Kadut\"           \n[47] \"Tampines\"                \"Tanglin\"                \n[49] \"Tengah\"                  \"Toa Payoh\"              \n[51] \"Tuas\"                    \"Western Islands\"        \n[53] \"Western Water Catchment\" \"Woodlands\"              \n[55] \"Yishun\"                 \n\n\n\n\n3.2.5 Trellis display\n\nxbrks <- seq(-50000, 50000, 10000)\nxlabls <- paste0(as.character(c(seq(50, 0, -10), seq(10, 50, 10))))\n\np <- ggplot(subset(Popdata_T, PA %in% c(\"Ang Mo Kio\", \"Sengkang\", \"Tampines\", \"Jurong East\", \"Bishan\", \"Woodlands\",\"Yishun\",\"Punggol\",\"Outram\")), \n      aes (x = AG, y = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\", width = .9 ) +\n      scale_y_continuous(breaks = xbrks, labels = xlabls, name = \"Population Size ('000)\") +\n      xlab(\"Age Groups\") +\n      coord_flip() +\n      theme_bw() \n\n\nxbrks1 <- seq(-50000, 50000, 10000)\nxlabls1 <- paste0(as.character(c(seq(50, 0, -10), seq(10, 50, 10))))\np1 <- p +  facet_wrap (~ PA, nrow = 3, ncol = 3) + \n            xlab(\"Age Groups\") +\n            ggtitle(\"Age-Sex Pyramid for Selected 9 Planning Areas by Population\")+\n            scale_y_continuous(breaks = xbrks1, labels = xlabls1, name = \"Population Size ('000)\")\n\nggplotly(p1)\n\n\n\n\n\nSource: Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022\nThe makeover graph kept the display template of the original graph and the overall format, and improved on a few elements:\n\n\nClarity\n\nNow the X-axis label is very clear which represents the population, and right corner has the legend to clarify the representation of right and left bars.\nThe number label has been removed from the bar charts. Audience can hover on a specific row to view the details.\nAdded the data source caption\n\n\n\nAesthetics\n\nThe Y-axis become larger now, there are some space in between the text labels.\nThe margin space between rows have been reduced, now looks more clear.\nThe title of the graph is more obvious now.\n\n\n\n\n4.0 Learning Point\nAfter taken the session 2, I realized a lot of deficiencies in exercise 1. It provide me with an opportunity to fix and improve the graph design, also give me a chance to working with R. My key takeaways are:\n\nThe graph should be as simple as possible, but the component of the graph like title, legend and caption is very important. It should be very clear and highlighted."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are: tidyverse and ggiraph.\n\npacman::p_load(ggiraph, tidyverse)\n\nImport data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize=0.5)\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE) #<<\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) #<<\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\npacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n\ncheck_model(model1)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "pacman::p_load(ggtern,plotly, tidyverse,corrplot, tidyverse, ggstatsplot, ggcorrplot,seriation, dendextend, heatmaply, tidyverse)\nImport Data\nNext, use the mutate() function of dplyr package to derive three new measures, namely: young, active, and old."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-an-interative-ternary-diagram",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#plotting-an-interative-ternary-diagram",
    "title": "In-class Exercise 5",
    "section": "Plotting an interative ternary diagram",
    "text": "Plotting an interative ternary diagram\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-2",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-2",
    "title": "In-class Exercise 5",
    "section": "Part 2",
    "text": "Part 2\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\npairs(wine[,1:11])\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-3",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#part-3",
    "title": "In-class Exercise 5",
    "section": "Part 3",
    "text": "Part 3\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\n\nrow.names(wh) <- wh$Country\n\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "href": "In-class_Ex/In-class_Ex06/In-class_Ex06.html",
    "title": "In-class Exercise 6",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\nImport Data\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/ruipengwang/Downloads/Chilly-RP/ISSS608-VAA/In-class_Ex/In-class_Ex06/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\nsgpools <- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\n\nsgpools_sf <- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\n\ntmap_mode(\"view\")\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = \"Gp1Gp2 Winnings\",\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1)\n\n\n\n\n\n\n\ntm_shape(sgpools_sf) +\n  tm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html",
    "title": "In-Class Exercise 8",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#plotting-network-data-with-ggraph-package",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#plotting-network-data-with-ggraph-package",
    "title": "In-Class Exercise 8",
    "section": "Plotting Network Data with ggraph package",
    "text": "Plotting Network Data with ggraph package\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\nModifying network nodes\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\nModifying edges\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\nWorking with facet_edges()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\nWorking with facet_nodes()\n\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#network-metrics-analysis",
    "href": "In-class_Ex/In-class_Ex08/In-class_Ex08.html#network-metrics-analysis",
    "title": "In-Class Exercise 8",
    "section": "Network Metrics Analysis",
    "text": "Network Metrics Analysis\n\ng <- GAStech_graph %>%\n  mutate(betweenness_centrality = centrality_betweenness()) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\n\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department) \n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  }
]